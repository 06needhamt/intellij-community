<components>
  <application-components>
    <component>
      <implementation-class>com.intellij.psi.codeStyle.CodeStyleSettingsManager</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.psi.codeStyle.CodeStyleSchemes</interface-class>
      <implementation-class>com.intellij.psi.impl.source.codeStyle.CodeStyleSchemesImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.codeInsight.intention.impl.config.IntentionManagerSettings</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.todo.TodoConfiguration</interface-class>
      <implementation-class>com.intellij.ide.todo.TodoConfiguration</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.find.FindSettings</interface-class>
      <implementation-class>com.intellij.find.impl.FindSettingsImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.codeInsight.CodeInsightSettings</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.fileEditor.impl.text.TextEditorProvider</interface-class>
      <implementation-class>com.intellij.openapi.fileEditor.impl.text.PsiAwareTextEditorProvider</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.formatting.FormatterEx</interface-class>
      <implementation-class>com.intellij.formatting.FormatterImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.codeInspection.ex.InspectionToolRegistrar</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.codeInsight.daemon.DaemonCodeAnalyzerSettings</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.codeInsight.template.impl.TemplateSettings</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.codeInsight.template.impl.TemplateManagerActions</interface-class>
      <implementation-class>com.intellij.codeInsight.template.impl.TemplateManagerActions</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.util.indexing.FileBasedIndex</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.usageView.UsageTreeColorsScheme</interface-class>
      <implementation-class>com.intellij.usageView.UsageTreeColorsScheme</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.tools.ToolManager</interface-class>
      <implementation-class>com.intellij.tools.ToolManager</implementation-class>
    </component>
  </application-components>

  <project-components>
    <component>
      <interface-class>com.intellij.codeInsight.highlighting.HighlightManager</interface-class>
      <implementation-class>com.intellij.codeInsight.highlighting.HighlightManagerImpl</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <interface-class>com.intellij.codeInsight.lookup.LookupManager</interface-class>
      <implementation-class>com.intellij.codeInsight.lookup.impl.LookupManagerImpl</implementation-class>
      <headless-implementation-class>com.intellij.codeInsight.lookup.impl.TestLookupManager</headless-implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>com.intellij.psi.codeStyle.CodeStyleSettingsManager</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.roots.ProjectRootManager</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.ProjectRootManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.roots.impl.DirectoryIndex</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.DirectoryIndexImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.psi.PsiManager</interface-class>
      <implementation-class>com.intellij.psi.impl.PsiManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.psi.PsiDocumentManager</interface-class>
      <implementation-class>com.intellij.psi.impl.PsiDocumentManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.module.ModuleManager</interface-class>
      <implementation-class>com.intellij.openapi.module.impl.ModuleManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.find.FindManager</interface-class>
      <implementation-class>com.intellij.find.impl.FindManagerImpl</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>

    <component>
      <interface-class>com.intellij.usageView.UsageViewManager</interface-class>
      <implementation-class>com.intellij.usageView.impl.UsageViewManagerImpl</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <interface-class>com.intellij.codeInsight.highlighting.BraceHighlighter</interface-class>
      <implementation-class>com.intellij.codeInsight.highlighting.BraceHighlighter</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <interface-class>com.intellij.codeInsight.folding.CodeFoldingManager</interface-class>
      <implementation-class>com.intellij.codeInsight.folding.impl.CodeFoldingManagerImpl</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <interface-class>com.intellij.openapi.fileEditor.FileEditorManager</interface-class>
      <implementation-class>com.intellij.openapi.fileEditor.impl.PsiAwareFileEditorManagerImpl</implementation-class>
      <headless-implementation-class>com.intellij.testFramework.TestEditorManagerImpl</headless-implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>

    <component>
      <interface-class>com.intellij.problems.WolfTheProblemSolver</interface-class>
      <implementation-class>com.intellij.codeInsight.problems.WolfTheProblemSolverImpl</implementation-class>
      <headless-implementation-class>com.intellij.codeInsight.problems.MockWolfTheProblemSolver</headless-implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <interface-class>com.intellij.pom.tree.TreeAspect</interface-class>
      <implementation-class>com.intellij.pom.tree.TreeAspect</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.psi.impl.source.PostprocessReformattingAspect</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.codeInspection.InspectionManager</interface-class>
      <implementation-class>com.intellij.codeInspection.ex.InspectionManagerEx</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>
    <component>
      <interface-class>com.intellij.packageDependencies.DependencyValidationManager</interface-class>
      <implementation-class>com.intellij.packageDependencies.DependencyValidationManagerImpl</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <interface-class>com.intellij.codeInsight.daemon.DaemonCodeAnalyzer</interface-class>
      <implementation-class>com.intellij.codeInsight.daemon.impl.DaemonCodeAnalyzerImpl</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.EditorTracker</implementation-class>
      <skipForDummyProject/>
    </component>
    <component>
      <interface-class>com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFile</interface-class>
      <implementation-class>com.intellij.codeInsight.daemon.impl.analysis.HighlightingSettingsPerFile</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.GeneralHighlightingPassFactory</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.VisibleGeneralHighlightingPassFactory</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.ShowIntentionsPassFactory</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.CodeFoldingPassFactory</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.LocalInspectionsPassFactory</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.WholeFileLocalInspectionsPassFactory</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.ExternalToolPassFactory</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.codeInsight.daemon.impl.WolfPassFactory</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.codeInsight.template.TemplateManager</interface-class>
      <implementation-class>com.intellij.codeInsight.template.impl.TemplateManagerImpl</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.psi.search.scope.packageSet.NamedScopeManager</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>

    <component>
      <interface-class>com.intellij.ide.todo.TodoView</interface-class>
      <implementation-class>com.intellij.ide.todo.TodoView</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>
    <component>
      <implementation-class>com.intellij.util.indexing.FileBasedIndexProjectHandler</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.structureView.StructureViewFactory</interface-class>
      <implementation-class>com.intellij.ide.structureView.impl.StructureViewFactoryImpl</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>

    <component>
      <interface-class>com.intellij.codeInsight.documentation.DocumentationManager</interface-class>
      <implementation-class>com.intellij.codeInsight.documentation.DocumentationManager</implementation-class>
      <skipForDummyProject/>
    </component>
  </project-components>

  <module-components>
    <component>
      <interface-class>com.intellij.openapi.roots.ModuleRootManager</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.ModuleRootManagerImpl</implementation-class>
    </component>
  </module-components>
</components>