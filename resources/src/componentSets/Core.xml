<components>
  <application-components>
    <component>
      <implementation-class>com.intellij.util.xml.impl.DomApplicationComponent</implementation-class>
    </component>

    <!--
    <component>
      <interface-class>com.intellij.lang.jsp.jspxLike.JspxLikeTreeParserDefinition</interface-class>
      <implementation-class>com.intellij.lang.jsp.jspxLike.JspxLikeTreeParserDefinitionImpl</implementation-class>
    </component>
    -->
    <component>
      <interface-class>com.intellij.ide.XmlRpcServer</interface-class>
      <implementation-class>com.intellij.ide.XmlRpcServerImpl</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.vfs.ex.http.HttpFileSystem</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.psi.codeStyle.CodeStyleSettingsManager</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.psi.statistics.StatisticsManager</interface-class>
      <implementation-class>com.intellij.psi.statistics.impl.StatisticsManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.ide.todo.TodoConfiguration</interface-class>
      <implementation-class>com.intellij.ide.todo.TodoConfiguration</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.projectRoots.ProjectJdkTable</interface-class>
      <implementation-class>com.intellij.openapi.projectRoots.impl.ProjectJdkTableImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.roots.libraries.LibraryTable</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.libraries.ApplicationLibraryTable</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.javaee.ExternalResourceManager</interface-class>
      <implementation-class>com.intellij.j2ee.openapi.impl.ExternalResourceManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.psi.codeStyle.CodeStyleSchemes</interface-class>
      <implementation-class>com.intellij.psi.impl.source.codeStyle.CodeStyleSchemesImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.psi.impl.PsiManagerConfiguration</interface-class>
      <implementation-class>com.intellij.psi.impl.PsiManagerConfiguration</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.refactoring.migration.MigrationMapSet</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.roots.libraries.LibraryTablesRegistrar</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.libraries.LibraryTablesRegistrarImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.formatting.FormatterEx</interface-class>
      <implementation-class>com.intellij.formatting.FormatterImpl</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.ide.OpenFileXmlRpcHandler</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.codeEditor.printing.PrintSettings</interface-class>
      <implementation-class>com.intellij.codeEditor.printing.PrintSettings</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.ide.FileIconPatcherImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.ide.RecentProjectsManager</interface-class>
      <implementation-class>com.intellij.ide.RecentProjectsManager</implementation-class>
    </component>
  </application-components>


  <project-components>
    <component>
      <interface-class>com.intellij.lang.injection.InjectedLanguageManager</interface-class>
      <implementation-class>com.intellij.psi.impl.source.tree.injected.InjectedLanguageManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.facet.impl.autodetecting.FacetAutodetectingManager</interface-class>
      <implementation-class>com.intellij.facet.impl.autodetecting.FacetAutodetectingManagerImpl</implementation-class>
      <skipForDummyProject/>
    </component>
    <component>
      <interface-class>com.intellij.facet.pointers.FacetPointersManager</interface-class>
      <implementation-class>com.intellij.facet.impl.pointers.FacetPointersManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.ide.impl.convert.ProjectFileVersion</interface-class>
      <implementation-class>com.intellij.ide.impl.convert.ProjectFileVersionImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.util.xml.DomManager</interface-class>
      <implementation-class>com.intellij.util.xml.impl.DomManagerImpl</implementation-class>
      <skipForDummyProject/>
    </component>
    <component>
      <interface-class>com.intellij.openapi.roots.ProjectRootManager</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.ProjectRootManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.roots.impl.DirectoryIndex</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.DirectoryIndexImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.psi.PsiManager</interface-class>
      <implementation-class>com.intellij.psi.impl.PsiManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.psi.JavaPsiFacade</interface-class>
      <implementation-class>com.intellij.psi.impl.JavaPsiFacadeImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.psi.PsiIncludeManager</interface-class>
      <implementation-class>com.intellij.psi.impl.PsiIncludeManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.psi.PsiDocumentManager</interface-class>
      <implementation-class>com.intellij.psi.impl.PsiDocumentManagerImpl</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.psi.codeStyle.CodeStyleSettingsManager</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.module.ModuleManager</interface-class>
      <implementation-class>com.intellij.openapi.module.impl.ModuleManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.roots.libraries.LibraryTable</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.libraries.ProjectLibraryTable</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <interface-class>com.intellij.pom.xml.XmlAspect</interface-class>
      <implementation-class>com.intellij.pom.xml.impl.XmlAspectImpl</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.psi.impl.IncludeAspectImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.pom.java.PomJavaAspect</interface-class>
      <implementation-class>com.intellij.pom.java.impl.PomJavaAspectImpl</implementation-class>
      <skipForDummyProject/>
    </component>
    <component>
      <interface-class>com.intellij.pom.tree.TreeAspect</interface-class>
      <implementation-class>com.intellij.pom.tree.TreeAspect</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.pom.wrappers.PsiEventWrapperAspect</interface-class>
      <implementation-class>com.intellij.pom.wrappers.PsiEventWrapperAspect</implementation-class>
      <skipForDummyProject/>
    </component>
    <component>
      <implementation-class>com.intellij.psi.search.scope.packageSet.NamedScopeManager</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>
    <component>
      <implementation-class>com.intellij.jar.BuildJarProjectSettings</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>com.intellij.ide.scopeView.ScopeViewPane</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>
    <component>
      <implementation-class>com.intellij.ide.favoritesTreeView.FavoritesProjectViewPane</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>
    <component>
      <implementation-class>com.intellij.ide.projectView.impl.ProjectViewPane</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>
    <component>
      <implementation-class>com.intellij.ide.projectView.impl.PackageViewPane</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>com.intellij.ide.favoritesTreeView.FavoritesManager</implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>com.intellij.psi.impl.source.PostprocessReformattingAspect</implementation-class>
    </component>

    <!--
    <component>
      <implementation-class>com.intellij.lang.jsp.jspxLike.impl.JspxLikeXmlTextSynchronizer</implementation-class>
    </component>
    -->
  </project-components>


  <module-components>
    <component>
      <interface-class>com.intellij.facet.FacetManager</interface-class>
      <implementation-class>com.intellij.facet.FacetManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.roots.ModuleRootManager</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.ModuleRootManagerImpl</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.jar.BuildJarSettings</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.javaee.model.annotations.JamModuleManager</interface-class>
      <implementation-class>com.intellij.javaee.model.annotations.JamModuleManagerImpl</implementation-class>
      <skipForDummyProject/>
    </component>
  </module-components>
</components>
