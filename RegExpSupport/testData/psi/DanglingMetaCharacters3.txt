REGEXP_FILE
  RegExpPatternImpl: <{{E1:\s*(?P<ref>([^\n]+\+)?[0-9]+)( *\|[^\n]*)?}}>
    RegExpBranchImpl: <{{E1:\s*(?P<ref>([^\n]+\+)?[0-9]+)( *\|[^\n]*)?}}>
      RegExpCharImpl: <{>
        PsiElement(CHARACTER)('{')
      RegExpCharImpl: <{>
        PsiElement(CHARACTER)('{')
      RegExpCharImpl: <E>
        PsiElement(CHARACTER)('E')
      RegExpCharImpl: <1>
        PsiElement(CHARACTER)('1')
      RegExpCharImpl: <:>
        PsiElement(CHARACTER)(':')
      RegExpClosureImpl: <\s*>
        RegExpSimpleClassImpl: <\s>
          PsiElement(CHAR_CLASS)('\s')
        RegExpQuantifierImpl: <*>
          PsiElement(STAR)('*')
      RegExpGroupImpl: <(?P<ref>([^\n]+\+)?[0-9]+)>
        PsiElement(PYTHON_NAMED_GROUP)('(?P<')
        PsiElement(NAME)('ref')
        PsiElement(GT)('>')
        RegExpPatternImpl: <([^\n]+\+)?[0-9]+>
          RegExpBranchImpl: <([^\n]+\+)?[0-9]+>
            RegExpClosureImpl: <([^\n]+\+)?>
              RegExpGroupImpl: <([^\n]+\+)>
                PsiElement(GROUP_BEGIN)('(')
                RegExpPatternImpl: <[^\n]+\+>
                  RegExpBranchImpl: <[^\n]+\+>
                    RegExpClosureImpl: <[^\n]+>
                      RegExpClassImpl: <[^\n]>
                        PsiElement(CLASS_BEGIN)('[')
                        PsiElement(CARET)('^')
                        RegExpCharImpl: <\n>
                          PsiElement(ESC_CTRL_CHARACTER)('\n')
                        PsiElement(CLASS_END)(']')
                      RegExpQuantifierImpl: <+>
                        PsiElement(PLUS)('+')
                    RegExpCharImpl: <\+>
                      PsiElement(ESC_CHARACTER)('\+')
                PsiElement(GROUP_END)(')')
              RegExpQuantifierImpl: <?>
                PsiElement(QUEST)('?')
            RegExpClosureImpl: <[0-9]+>
              RegExpClassImpl: <[0-9]>
                PsiElement(CLASS_BEGIN)('[')
                RegExpCharRangeImpl: <0-9>
                  RegExpCharImpl: <0>
                    PsiElement(CHARACTER)('0')
                  PsiElement(MINUS)('-')
                  RegExpCharImpl: <9>
                    PsiElement(CHARACTER)('9')
                PsiElement(CLASS_END)(']')
              RegExpQuantifierImpl: <+>
                PsiElement(PLUS)('+')
        PsiElement(GROUP_END)(')')
      RegExpClosureImpl: <( *\|[^\n]*)?>
        RegExpGroupImpl: <( *\|[^\n]*)>
          PsiElement(GROUP_BEGIN)('(')
          RegExpPatternImpl: < *\|[^\n]*>
            RegExpBranchImpl: < *\|[^\n]*>
              RegExpClosureImpl: < *>
                RegExpCharImpl: < >
                  PsiElement(CHARACTER)(' ')
                RegExpQuantifierImpl: <*>
                  PsiElement(STAR)('*')
              RegExpCharImpl: <\|>
                PsiElement(ESC_CHARACTER)('\|')
              RegExpClosureImpl: <[^\n]*>
                RegExpClassImpl: <[^\n]>
                  PsiElement(CLASS_BEGIN)('[')
                  PsiElement(CARET)('^')
                  RegExpCharImpl: <\n>
                    PsiElement(ESC_CTRL_CHARACTER)('\n')
                  PsiElement(CLASS_END)(']')
                RegExpQuantifierImpl: <*>
                  PsiElement(STAR)('*')
          PsiElement(GROUP_END)(')')
        RegExpQuantifierImpl: <?>
          PsiElement(QUEST)('?')
      RegExpCharImpl: <}>
        PsiElement(CHARACTER)('}')
      RegExpCharImpl: <}>
        PsiElement(CHARACTER)('}')