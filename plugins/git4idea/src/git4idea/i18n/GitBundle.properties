action.text.show.all.submitted=Show all files changed by this commit
add.action.name=Add
addrefspec.get.references.tooltip=Get remote tag and branch references (depending on checkbox state).
addrefspec.get.references=&Get References
addrefspec.getting.references.title=Getting remote references for {0}
addrefspec.include.branches.tooltip=The next update references wil retrieve remote branches.
addrefspec.include.branches=Include &branches
addrefspec.include.tags.tooltip=The next update references wil retrieve remote tags.
addrefspec.include.tags=Include &tags
addrefspec.node.branches=Branches
addrefspec.node.tags=Tags
addrefspec.reference.chooser.tooltip=Select remote branch and tag references
addrefspec.title=Add Reference(s)
annotate.action.name=Annotate
annotation.tool.tip=commit {0}\nAuthor: {1}\nDate: {2}\n\n{3}
checking.out=Checkout {0}
checkout.action.name=Checkout
checkout.branch.label=&Checkout
checkout.branch.name.exists=Branch with the same name exists. Use override option to force branch creation.
checkout.branch=Checkout
checkout.create.ref.log.tooltip=If checked the reference log is created for the branch. It allows time based searches. (the option \"-l\")
checkout.create.ref.log=Create ref &log
checkout.include.tags.tooltip=If checked, the combobox will inclue tags names as well as branches.
checkout.include.tags=&Include tags
checkout.invalid.new.branch.name=Invalid new branch name
checkout.new.branch.tooltip=Enter name of new branch here. Leave blank if you do not want to create a new branch.
checkout.new.branch=As &new branch
checkout.override.branch=&Override
checkout.override.tooltip=If ckecked a branch will be created even if a branch with the same name already exists. The previous branch will be deleted.
checkout.ref.tooltip=Select branch, tag, or enter commit reference
checkout.retriving.branches.and.tags=Retriving branches and tags
checkout.track.branch=&Track branch
checkout.track.tooltip=If checked, the newly created branch will track original branch during pull.
checkout.validate.tooltip=Use this button to validate reference expression if entered manually.
checkout.validate=&Validate
checkout.validation.failed=Source revision validation failed
clone.destination.directory.description=Select a parent directory destination directory for clone
clone.destination.directory.title=Parent Directory
clone.destination.exists.error=The path {0} exists. The Git cannot clone to existing directory.
clone.dir.name=Directory &Name
clone.invalid.origin=The origin name is in invalid format.
clone.invalid.url=Repository URL is a malformed URL or non-existent directory.
clone.origin=&Origin Name
clone.parent.dir=&Parent Directory
clone.parent.missing.error=The parent path {0} must exist.
clone.repository.url=Git &Repository URL
clone.test.failed.error=Repository test has failed.
clone.test.success.message=<html>Connection to repository <tt>{0}</tt> has been successful.</html>
clone.test.success=Connection successful
clone.test=&Test
clone.testing=Testing repository {0}
clone.title=Clone Repository
clone.url.is.not.directory.error=Repository URL is not a directory.
cloning.repository=Cloning source repository {0}
command.cancelled=The command was cancelled.
commit.action.name=Commit
commit.author.tooltip=<html>Specify a commit author here if it is different from committer. The author should be in the format: Author Name &lt;author@ema.il&gt;</html>
commit.author=&Author:
commit.partial.merge.message=<html>The following files are not included in commit.<ul>{0}</ul>Perorm commit with all files included?</html>
commit.partial.merge.title=Partial Merge Commit
commit.push.changes.tooltip=When this option is enabled, changes are pushed to the server after commit.
commit.push.changes=&Push Changes
common.current.branch.tooltip=The currently checked out branch.
common.current.branch=Current Branch:
common.git.root.tooltip=Select git vcs root
common.git.root=Git &Root:
common.no.active.branch=<no active branch>
computing.annotation=Computing annotation for {0}
current.branch.action.name=CurrentBranch
current.branch.message=Checked out branch: {0}
current.branch.title=Current Branch
debug.git.exec=DEBUG: work-dir: [{0}] exec: [{1}]
delete.action.name=Delete
diff.find.error=Finding revision for diff: {0}
error.dialog.title=Error
error.list.title={0} Error:
error.occurred.during=Error occurred during ''{0}''
fetch.action.name=Fetch
fetch.force.references.update.tooltip=Forces update of branch references for which update is not forced in refrence mapping.
fetch.force.references.update=Force references &update
fetch.remote.label=Re&mote:
fetch.remote.tooltip=Remote name or url for fetch
fetch.tags.label=Fetch &tags:
fetch.tags.policy.all=All
fetch.tags.policy.for.fetched.commits=For fetched commits
fetch.tags.policy.none=None
fetch.tags.tooltip=<html>Select fetched commits policy<ul><li><i>For fetched commits</i> means tags associated with commits on fetched branches are fetched.</li><li><i>All</i> means that all tags and reference commits are fetched</li><li><i>None</i> means that no tags are fetched.</li></ul></html>
fetch.title=Git Fetch
fetching.tags.title=Updating tags from {0}
fetching.title=Fetching from {0}
find.git.description=Select path to git executable
find.git.error.title=Error Running git
find.git.success.title=Git Executed Successfully
find.git.title=Git Configuration
find.git.unsupported.message=<html><tt>{0}</tt><br>This version is unsupported, and some plugin functionality could fail to work.<br>The minimal supported version is <em>{1}</em>.</html>
getting.history=Getting history for {0}
git.default.commit.message=\n# Brief commit desciption here\n\n# Full commit description here (comment lines starting with '#' will not be included)\n\n
git.error.exit=The git process exited with the code {0}
git.running=<html>Running: {0}</html>
git.vcs.config.path.label=Path to &git executable:
git.vcs.config.test.label=Test 
git.vcs.config.test=&Test
index.file.error=Updating file in the index failed
init.destination.directory.description=Select directory for where new git repository will be created.
init.destination.directory.title=Select directory for git init
init.error.already.under.git=The selected directory {0} is already under git. The submodules are not yet supported.
init.error.title=git init Error
merge.action.name=Merge
merge.add.log.information.tooltip=Add log information to the commit message (\"--log\" option)
merge.add.log.information=Add &log information
merge.branch.message=Select branch to merge into this one ({0})
merge.branch.title=Merge Branches
merge.branches.tooltip=<html>The chooser for braches. Select one or more braches to merge (already merged branches are not shown)</html>.
merge.branches=&Branches to merge:
merge.commit.message.tooltip=The commit message to use in case if merge results in commit (\"-m\" option)
merge.commit.message=Commit &Message
merge.default.strategy=<default>
merge.is.not.needed=Merge is not needed for the file {0}
merge.load.files=Loading files for merge
merge.no.commit.tooltip=Force no commit for merge (the \"--no-commit\" option)
merge.no.commit=No &commit
merge.no.fast.forward.tooltip=Disable fast forward (\"--no-ff\" option)
merge.no.fast.forward=No &fast forward
merge.retriving.branches=Retriving unmerged branches
merge.squash.commit=S&quash commit
merge.squash.tooltip=Squash all changes into the single commit (\"--squash\" option)
merge.strategy.tooltip=The merge strategy to use (\"-s\" option)
merge.strategy=&Strategy:
merge.tool.action.name=MergeTool
merging.branch=Merging branch {0}
merging.title=Merging changes to {0}
paths.affected.title=Paths affected in commit {0}
pull.action.name=Pull
pull.force.reference.update=Force reference &update
pull.get.branches.tooltip=Get branch names from remote repository. Otherwise a locally cached information is used.
pull.get.branches=&Get Branches
pull.getting.remote.branches=Getting remote branches
pull.remote.tooltip=Registered remote name or URL.
pull.remote=Re&mote:
pull.retriving.remotes=Retriving remotes
pull.title=Pull changes
pull.url.message=Enter remote repository URL to pull/merge (empty for default):
pull.url.title=Pull URL
pulling.title=Pulling changes from {0}
push.action.name=Push
pushing.all.changes=Pushing all commited changes, refs & tags to remote repos
refspec.add.all.branches.tooltip=Add refspec that maps all remote branches by glob spec.
refspec.add.all.branches=Add A&ll Branches
refspec.add.all.tags.tooltip=Adds mapping entry for all tags
refspec.add.all.tags=Add All Ta&gs
refspec.add.ref.tooltip=Add branch or tag by name
refspec.add.ref=&Add...
refspec.branch.prefix.tooltip=Specify default branch prefix for the mapping.
refspec.branch.prefix=Remote &Name:
refspec.column.force=Force
refspec.column.local=Local
refspec.column.remote=Remote
refspec.remove.tooltip=Delete refspec entry
refspec.remove=Remo&ve
refspec.title=Reference mapping
refspec.validation.remote.invalid=The invalid local name for remote
refspec.validation.remote.is.blank=The local name for remote is blank
repository.action.missing.roots.misconfigured=Neither of configured git roots are is under git. The configured directory or some of its ancestors must have ".git" directory in it.
repository.action.missing.roots.title=No git roots
repository.action.missing.roots.unconfigured.message=No git roots are configured for the project.
revert.action.name=Revert
revision.graph=RevisionGraph
select.branch.to.checkout=Select branch to checkout
ssh.ask.passphrase.title=SSH Key Passphrase
ssh.askPassphrase.message=Please enter passphrase for the private key {0} (the user name is {1})
ssh.changed.host.key=<html>The server host key for the host {0}:{1} has changed to {2} (type {3}).\nDo you want to accept the changed key?</html>
ssh.confirm.key.titile=Confirm SSH Server Key
ssh.error.title=Authentication error
ssh.keyboard.interactive.title=SSH Keyboard Interactive: {0}
ssh.keyboard.interactive.username=Username:
ssh.new.host.key=<html>Connecting to a new host {0}:{1} that has the key {2} (type {3}).\nDo you want to add this host to known hosts database?</html>
ssh.password.message=Please enter password for user {0}
ssh.password.title=SSH Password Login
sshmain.failed.to.verify.key=Failed to verify key: {0}
sshmain.forwarding.failed=Forwarding {0} failed: {1}
sshmain.invald.host.key=Invald host key {0} {1}
sshmain.invalid.amount.of.arguments=Invalid amount of arguments: {0}
sshmain.invalidpassphrase=Invalid passphrase for the key {0}
sshmain.keyboard.interactive.failed=Keyboard interactive authentication failed.
sshmain.password.failed=Invalid user or password.
sshmain.pk.authenitication.failed=Authentication using key {0} failed.
sshmain.too.mush.passphrase.guesses=Invalid passphrase for the key {0}({1} attempts)
stash.action.name=Stash
stash.name.message=Enter new stash name/description:
stash.name.title=Stash
stashing.title=Stashing changes...
tag.action.name=Tag
tag.commit.label=&Commit:
tag.commit.tooltip=Enter name of commit or object to tag or leave blank to use HEAD.
tag.error.creating.message.file.message=Unable to create message file: {0}
tag.error.creating.message.file.title=Error creating message file
tag.error.invalid.commit=The commit or object name is invalid.
tag.error.tag.exists=The tag with the same name exists.
tag.force.tooltip=Force creation of the text even if tag with such name already exists.
tag.force=&Force
tag.getting.existing.tags=Getting existing tags...
tag.message.label=&Message:
tag.message.tooltip=If the message is not empty, an annotated tag is created.
tag.message=Specify tag name:
tag.name.label=Tag &Name:
tag.name.tooltip=Enter the new tag name here.
tag.nonvcs.error.message=ERROR: Files not tagged, not all are under VCS root!
tag.nonvcs.error.title=Tag Result
tag.title=Tag
tag.validate.tooltip=Click this button to the validate commit to be tagged.
tag.validate=&Validate
tagging.title=Tagging files...
unindexed.files.changlelist.name=Unindexed Files
unstash.action.name=UnStash
unstash.message=Select stash to restore:
unstash.notfound.message=No stashes are found in git repositories.
unstash.notfound.title=No stashes found
unstash.title=UnStash Changes
unstashing.title=UnStashing changes...
vcs.unable.to.run.git=Unable to run git: {0} ({1})
vcs.unsupported.version=Unsupported version of git configured: {0}. The minimal supported version is {1}
vfs.listener.add.single.prompt=Do you want to add the following file to Git?\n{0}\n\nIf you say NO, you can still add it later manually.
vfs.listener.add.single.title=Add file to Git
vfs.listener.add.title=Add files to Git
vfs.listener.delete.single.prompt=Do you want to delete the following file from Git?\n{0}\n\nIf you say NO, you can still delete it later manually.
vfs.listener.delete.single.title=Delete file from Git
vfs.listener.delete.title=Delete files from Git
