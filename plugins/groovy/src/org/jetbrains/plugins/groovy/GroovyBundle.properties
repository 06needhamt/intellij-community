#
#  Copyright 2000-2007 JetBrains s.r.o.
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

########################################################################################################################
# Groovy script template
########################################################################################################################
error.file.already.exists=File with same name already exists

file.template.group.title.groovy=Groovy

newclass.dlg.prompt=Enter name for new Groovy Class
newclass.dlg.title=New Groovy Class
newclass.menu.action.text=Groovy Class
newclass.menu.action.description=Creates new Groovy Class
newclass.command.name=Create Groovy Class
newclass.progress.text=Creating Groovy Class ''{0}''

newscript.dlg.prompt=Enter name for new Groovy Script
newscript.dlg.title=New Groovy Script
newscript.menu.action.text=Groovy Script
newscript.menu.action.description=Creates new Groovy Script
newscript.command.name=Create Groovy Script
newscript.progress.text=Creating Groovy Script ''{0}''

action.group.groovy.title=Groovy
action.group.groovy.description=Groovy

##########################################################################################################################
# GDK & compilation
########################################################################################################################


no.java.sdk=No java SDK configured
cannot.found.jdk=Cannot found java sdk
cannot.compile.groovy.files=Cannot compile Groovy files.\nPlease set up GDK

########################################################################################################################
# Parser error messages
########################################################################################################################

separator.expected=';' or new line expected
separator.or.rcurly.expected= Wrong token
import.keyword.expected='import' expected
import.identifier.expected=package or class name expected
identifier.expected=Identifier expected
import.not.allowed=Imports are not allowed in such block
identifier.or.block.expected=Identifier or code block expected
package.keyword.expected='package' expected
string.end.expected=GString ending expected
regex.end.expected=Regex ending expected
mult.expression.expected=Multiplicative expression expected
closure.op.expected='->' expected
lbrack.expected='[' expected
rbrack.expected=']' expected
upper.case.ident.or.builtIn.type.or.qualified.type.name.expected=upper case identifier or built in type or qualified type name expected
balanced.tokens.expected=balanced tokens expected
lparen.expected='(' expected
lcurly.expected='{' expected
comma.expected=',' expected
start.of.string.expected=start of string expected
end.of.string.expected=end of string expected
rcurly.expected='}' expected
rparen.expected=')' expected
semi.expected=';' expected
gt.expected='>' expected
else.without.if='else' without 'if'
catch.without.try='catch' without 'try'
finally.without.try='finally' without 'try'
case.without.switch='case' outside 'switch' block
default.without.switch='default' outside 'switch' block
catch.or.finally.expected='catch' or 'finally' expected
colon.expected=':' expected
lbrack.or.lparen.or.lcurly.or.string_ctor_start.expected='[', '{', '{' or start of the string expected
wrong.declaration=Wrong declaration
wrong.statement=Wrong statement
variable.definitions.expected=Variable definition expected
type.specification.expected=Type specification expected
modifier.expected=Modifier expected
annotation.or.modifier.expected=Annotation or modifier expected
type.definition.expected=Type definition expected
expression.expected=Expression expected
case.block.expected=Case block expected
case.expected='case' or 'default' expected
block.expression.expected=Block expression expected
wrong.string=Wrong string literal
path.selector.expected=Property selector expected
duplicate.modifier=Duplicate modifier
param.expected=Parameter expected
for.clause.expected=clause expected

class.or.interface.or.enum.or.annotation.expected=class, interface, enumeration or annotation declaration expected
at.expected='@' expected
intarface.expected='interface' expected
if.expected='if' expected
strict.context.expression.expected=unexpected token in this context
compound.statement.or.statement.expected=block or statement expected
class.or.interface.type.expected=class or interface type expected
class.interface.enum.or.at.interface.expected='class', 'enum', 'interface' or '@ interface' expected
final.def.or.annotation.definition.expected='def', 'final' or annotation definition expected
compound.statemenet.expected=compound statement expected
constructor.expected=constructor expected
indentifier.or.string.literal.expected=identifier or string literal expected
enable.grails=Enable Grails
error.class.not.found.in.jar=Class ''{0}'' not found

#config
groovy.config.label=Groovy installation directory
groovy.config.descr=Please specify path to Groovy installation directory
groovy.config.nogroovy.title=Groovy Configuration Error
groovy.config.downloadLink=http://groovy.codehaus.org/Download
groovy.config.downloadLinkLabel=Groovy is available for download on:

grails.config.label=Grails installation directory
grails.config.descr=Please specify path to Grails installation directory
grails.config.nogroovy.title=Grails Configuration Error
grails.config.downloadLink=http://grails.codehaus.org/Installation
grails.config.downloadLinkLabel=Grails is available for download on:
empty.parameter.list.expected=empty parameter list expected
string.name.unexpected=string name unexpected
interface.body.expected=interface body expected
interface.must.has.no.static.compound.statemenet=static compound statement unexpected in interface
interface.must.has.no.compound.statemenet=compound statement unexpected in interface

########################################################################################################################
# Building caches
########################################################################################################################
title.caches.updating=Updating caches
title.caches.creating=Creating caches
title.caches.files.scanning=Scanning files...
title.caches.files.parsing=Parsing new files...
title.please.wait=Please wait
title.caches.saving=Saving caches
title.caches.datafile.loading=Loading caches
title.caches.files.removing=Removing old caches
title.caches.loading=Loading caches


########################################################################################################################
# Intentions & error messages
########################################################################################################################
cannot.resolve=Cannot resolve symbol ''{0}''
cannot.access=Cannot access symbol ''{0}''
cannot.apply.method=Cannot apply method ''{0}''
import.class=Import class
class.to.import.chooser.title=Choose class to import

########################################################################################################################
# Compiler
########################################################################################################################
class.already.exists=Class ''{0}'' already exists
no.exception.handler.found=no excpetion handler found

selected.block.should.represent.an.expression=Selected code block must represent an expression