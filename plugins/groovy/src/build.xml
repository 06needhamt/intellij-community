<!--
  ~  Copyright 2000-2007 JetBrains s.r.o.
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~  http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  ~
  -->

<project name="Generating the build of groovy language plugin" default="make.project">
  <property file="groovy.properties"/>
  <property environment="env"/>

  <property name="production.dest" location="${project.dir}/classes/production/Groovy"/>
  <property name="idea.dir" value="${project.dir}/lib/idea"/>
  <property name="idea.lib" value="${project.dir}/lib/idea/lib"/>
  <property name="groovy.lib" value="${project.dir}/GDK"/>
  <property name="plugin.libs" value="${project.dir}/lib/special"/>
  <property name="test.dir" value="${project.dir}/test"/>
  <property name="test.dest" value="${project.dir}/classes/test/Groovy"/>
  <property name="tools.jar.dir" value="${env.JAVA_HOME}/lib"/>

  <property name="output" value="${basedir}/dist"/>

  <path id="base.path">
    <fileset dir="${idea.lib}">
      <include name="**/*.jar"/>
      <exclude name="boot.jar"/>
    </fileset>
  </path>

  <path id="tools.path">
    <fileset dir="${tools.jar.dir}">
      <include name="**/*tools.jar"/>
    </fileset>
  </path>

  <path id="groovy.path">
    <fileset dir="${groovy.lib}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <target name="unzip last successful IDEA build">
    <unzip dest="${idea.dir}">
      <fileset dir="${idea.pack}">
        <include name="*.zip"/>
      </fileset>
    </unzip>
  </target>


  <target name="clear.all" description="clears all files">
    <mkdir dir="${production.dest}"/>
    <delete includeemptydirs="true">
      <fileset dir="${production.dest}"/>
    </delete>
  </target>

  <target name="build.lexer" description="makes lexer file">
    <ant dir="org/jetbrains/plugins/groovy/lang/lexer/"
         antfile="build.xml" target="generate.lexer"/>
  </target>

  <target name="make.project" description="makes project" depends="build.lexer, unzip last successful IDEA build">
    <copy todir="${production.dest}/META-INF">
      <fileset dir="${project.dir}/META-INF"/>
    </copy>

    <copy todir="${production.dest}/resources">
      <fileset dir="${project.dir}/resources"/>
    </copy>

    <copy file="${project.dir}/src/org/jetbrains/plugins/groovy/GroovyBundle.properties"
          tofile="${production.dest}/org/jetbrains/plugins/groovy/GroovyBundle.properties"/>


    <javac srcdir="."
           destdir="${production.dest}">
      <classpath refid="base.path"/>
      <classpath refid="groovy.path"/>
    </javac>
  </target>

  <target name="build.project" depends="clear.all, make.project" description="builds project"/>

  <target name="rebuild.all" depends="build.project, jar.groovy, zip.sources.groovy"
          description="builds and jar project and zip sources"/>

  <target name="jar.groovy" depends="make.project" description="makes groovy jar">
    <mkdir dir="${project.dir}/tempzip/Groovy/lib"/>

    <mkdir dir="${project.dir}/tempjar/lib/"/>

    <copy todir="${project.dir}/tempjar/lib">
      <fileset dir="${groovy.lib}">
        <include name="**/*antlr*.jar"/>
        <include name="**/*asm*.jar"/>
      </fileset>
    </copy>

    <jar destfile="${project.dir}/tempzip/Groovy/lib/Groovy.jar">
      <fileset dir="${production.dest}" excludes="**/*build.xml, **/groovy.properties">
      </fileset>

      <fileset dir="${plugin.libs}">
        <include id="**/*.jar"/>
      </fileset>

      <fileset dir="${project.dir}/tempjar">
      </fileset>
    </jar>

    <copy todir="${project.dir}/tempzip/Groovy/lib">
      <fileset dir="${groovy.lib}">
        <include name="**/*.jar"/>
      </fileset>
    </copy>

    <zip destfile="${project.dir}/Groovy.zip" basedir="${project.dir}/tempzip"/>

    <delete dir="${project.dir}/tempzip"/>
    <delete dir="${project.dir}/tempjar"/>
  </target>

  <target name="zip.sources.groovy" description="zips sources">
    <zip destfile="${project.dir}/sources.zip"
         basedir="${project.dir}"
         includes="src/**/*.java,
         src/**/*.properties,
         src/**/*.flex,
         src/**/*.jar,
         src/**/*.skeleton,
         src/**/*.xml,
         resources/**/*.*,
         META-INF/**/*.xml"
         excludes="src/**/*junit*"
        />
  </target>

  <target name="build tests" depends="make.project">

    <mkdir dir="${test.dest}"/>
    <mkdir dir="${test.dest}/Groovy"/>

    <javac srcdir="../test"
           destdir="${test.dest}">

      <classpath refid="base.path"/>
      <classpath refid="groovy.path"/>

      <classpath>
        <path location="${production.dest}"/>
      </classpath>

    </javac>
  </target>

  <target name="run.tests" description="runs all tests" depends="build tests">
    <mkdir dir="${project.dir}/logs"/>

    <junit fork="yes"
           dir="${project.dir}"
           printsummary="yes"
           haltonerror="no"
           haltonfailure="no"
           description="runs junit tests">

      <classpath>
        <path location="${test.dest}"/>
        <path location="${production.dest}"/>

        <path refid="base.path"/>
        <path refid="groovy.path"/>
        <path refid="tools.path"/>
      </classpath>

      <jvmarg value="-Didea.load.plugins.id=com.intellij.javaee"/>
      <jvmarg value="-Xbootclasspath/p:${idea.lib}/boot.jar"/>
      <jvmarg value="-Djava.awt.headless=true"/>
      <jvmarg value="-Xmx256M"/>
      <jvmarg value="-ea"/>
      <jvmarg value="-Xdebug"/>
      <jvmarg value="-Djava.compiler=NONE"/>
      <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006"/>

      <jvmarg value="-Didea.config.path=${output}/config"/>
      <jvmarg value="-Didea.system.path=${output}/system"/>

      <formatter type="plain"/>

      <batchtest todir="${project.dir}/logs">
        <fileset dir="${test.dir}">
          <include name="**/ParserTest.java"/>
        </fileset>
      </batchtest>

    </junit>

  </target>

</project>