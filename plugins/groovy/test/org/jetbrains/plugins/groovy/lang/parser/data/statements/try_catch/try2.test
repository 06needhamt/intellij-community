try {foo
catch ( Exception1 e1) {}
catch ( Exception1 e2) {}
finally{ doNothing }
-----
Groovy script
  Try statement
    PsiElement(try)('try')
    PsiWhiteSpace(' ')
    Open block
      PsiElement({)('{')
      Reference expression
        PsiElement(identifier)('foo')
      PsiElement(new line)('\n')
      PsiErrorElement:'catch' without 'try'
        PsiElement(catch)('catch')
      PsiWhiteSpace(' ')
      Method call
        Parenthesized expression
          PsiElement(()('(')
          PsiWhiteSpace(' ')
          Variable definitions
            Type element
              Reference element
                PsiElement(identifier)('Exception1')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('e1')
          PsiElement())(')')
        PsiWhiteSpace(' ')
        Closable block
          PsiElement({)('{')
          PsiElement(})('}')
      PsiElement(new line)('\n')
      PsiErrorElement:'catch' without 'try'
        PsiElement(catch)('catch')
      PsiWhiteSpace(' ')
      Method call
        Parenthesized expression
          PsiElement(()('(')
          PsiWhiteSpace(' ')
          Variable definitions
            Type element
              Reference element
                PsiElement(identifier)('Exception1')
            PsiWhiteSpace(' ')
            PsiElement(identifier)('e2')
          PsiElement())(')')
        PsiWhiteSpace(' ')
        Closable block
          PsiElement({)('{')
          PsiElement(})('}')
      PsiElement(new line)('\n')
      PsiErrorElement:'finally' without 'try'
        PsiElement(finally)('finally')
      Closable block
        PsiElement({)('{')
        PsiWhiteSpace(' ')
        Reference expression
          PsiElement(identifier)('doNothing')
        PsiWhiteSpace(' ')
        PsiElement(})('}')
      PsiErrorElement:'}' expected
        <empty list>