/*
 * Copyright 2010-2013 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.jet.findUsages;

import junit.framework.Assert;
import junit.framework.Test;
import junit.framework.TestSuite;

import java.io.File;
import java.util.regex.Pattern;
import org.jetbrains.jet.JetTestUtils;
import org.jetbrains.jet.test.InnerTestClasses;
import org.jetbrains.jet.test.TestMetadata;

import org.jetbrains.jet.findUsages.AbstractJetFindUsagesTest;

/** This class is generated by {@link org.jetbrains.jet.generators.tests.GenerateTests}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@InnerTestClasses({JetFindUsagesTest.JavaClassUsages.class, JetFindUsagesTest.KotlinClassUsages1.class, JetFindUsagesTest.KotlinClassUsages2.class, JetFindUsagesTest.KotlinClassUsages3.class, JetFindUsagesTest.JavaObjectUsages.class, JetFindUsagesTest.KotlinObjectUsages.class, JetFindUsagesTest.JavaMethodUsages.class, JetFindUsagesTest.KotlinMethodUsages.class, JetFindUsagesTest.JavaPropertyUsages.class, JetFindUsagesTest.KotlinPropertyUsages.class, JetFindUsagesTest.FindWithFilteringImports.class, JetFindUsagesTest.UnresolvedAnnotation.class})
public class JetFindUsagesTest extends AbstractJetFindUsagesTest {
    @TestMetadata("idea/testData/findUsages/findClassUsages/javaClassUsages")
    public static class JavaClassUsages extends AbstractJetFindUsagesTest {
        @TestMetadata("Server.kt")
        public void test() throws Exception {
            testFindClassJavaUsages("idea/testData/findUsages/findClassUsages/javaClassUsages/Server.kt");
        }
        
        public void testAllFilesPresentInJavaClassUsages() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findClassUsages/javaClassUsages"), Pattern.compile("^(.*)Server.kt$"), true);
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findClassUsages/kotlinClassUsages1")
    public static class KotlinClassUsages1 extends AbstractJetFindUsagesTest {
        @TestMetadata("Server.kt")
        public void test() throws Exception {
            testFindClassKotlinUsages("idea/testData/findUsages/findClassUsages/kotlinClassUsages1/Server.kt");
        }
        
        public void testAllFilesPresentInKotlinClassUsages1() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findClassUsages/kotlinClassUsages1"), Pattern.compile("^(.*)Server.kt$"), true);
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findClassUsages/kotlinClassUsages2")
    public static class KotlinClassUsages2 extends AbstractJetFindUsagesTest {
        @TestMetadata("Server.kt")
        public void test() throws Exception {
            testFindClassKotlinUsages("idea/testData/findUsages/findClassUsages/kotlinClassUsages2/Server.kt");
        }
        
        public void testAllFilesPresentInKotlinClassUsages2() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findClassUsages/kotlinClassUsages2"), Pattern.compile("^(.*)Server.kt$"), true);
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findClassUsages/kotlinClassUsages3")
    public static class KotlinClassUsages3 extends AbstractJetFindUsagesTest {
        @TestMetadata("Server.kt")
        public void test() throws Exception {
            testFindClassKotlinUsages("idea/testData/findUsages/findClassUsages/kotlinClassUsages3/Server.kt");
        }
        
        public void testAllFilesPresentInKotlinClassUsages3() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findClassUsages/kotlinClassUsages3"), Pattern.compile("^(.*)Server.kt$"), true);
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findObjectUsages/javaObjectUsages")
    public static class JavaObjectUsages extends AbstractJetFindUsagesTest {
        @TestMetadata("Server.kt")
        public void test() throws Exception {
            testFindObjectJavaUsages("idea/testData/findUsages/findObjectUsages/javaObjectUsages/Server.kt");
        }
        
        public void testAllFilesPresentInJavaObjectUsages() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findObjectUsages/javaObjectUsages"), Pattern.compile("^(.*)Server.kt$"), true);
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findObjectUsages/kotlinObjectUsages")
    public static class KotlinObjectUsages extends AbstractJetFindUsagesTest {
        @TestMetadata("Server.kt")
        public void test() throws Exception {
            testFindObjectKotlinUsages("idea/testData/findUsages/findObjectUsages/kotlinObjectUsages/Server.kt");
        }
        
        public void testAllFilesPresentInKotlinObjectUsages() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findObjectUsages/kotlinObjectUsages"), Pattern.compile("^(.*)Server.kt$"), true);
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findMethodUsages/javaMethodUsages")
    public static class JavaMethodUsages extends AbstractJetFindUsagesTest {
        @TestMetadata("Server.kt")
        public void test() throws Exception {
            testFindMethodJavaUsages("idea/testData/findUsages/findMethodUsages/javaMethodUsages/Server.kt");
        }
        
        public void testAllFilesPresentInJavaMethodUsages() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findMethodUsages/javaMethodUsages"), Pattern.compile("^(.*)Server.kt$"), true);
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findMethodUsages/kotlinMethodUsages")
    public static class KotlinMethodUsages extends AbstractJetFindUsagesTest {
        @TestMetadata("Server.kt")
        public void test() throws Exception {
            testFindMethodKotlinUsages("idea/testData/findUsages/findMethodUsages/kotlinMethodUsages/Server.kt");
        }
        
        public void testAllFilesPresentInKotlinMethodUsages() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findMethodUsages/kotlinMethodUsages"), Pattern.compile("^(.*)Server.kt$"), true);
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findPropertyUsages/javaPropertyUsages")
    public static class JavaPropertyUsages extends AbstractJetFindUsagesTest {
        @TestMetadata("Server.kt")
        public void test() throws Exception {
            testFindPropertyJavaUsages("idea/testData/findUsages/findPropertyUsages/javaPropertyUsages/Server.kt");
        }
        
        public void testAllFilesPresentInJavaPropertyUsages() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findPropertyUsages/javaPropertyUsages"), Pattern.compile("^(.*)Server.kt$"), true);
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findPropertyUsages/kotlinPropertyUsages")
    public static class KotlinPropertyUsages extends AbstractJetFindUsagesTest {
        @TestMetadata("Server.kt")
        public void test() throws Exception {
            testFindPropertyKotlinUsages("idea/testData/findUsages/findPropertyUsages/kotlinPropertyUsages/Server.kt");
        }
        
        public void testAllFilesPresentInKotlinPropertyUsages() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findPropertyUsages/kotlinPropertyUsages"), Pattern.compile("^(.*)Server.kt$"), true);
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findWithFilteringImports")
    public static class FindWithFilteringImports extends AbstractJetFindUsagesTest {
        @TestMetadata("Server.kt")
        public void test() throws Exception {
            testFindWithFilteringImports("idea/testData/findUsages/findWithFilteringImports/Server.kt");
        }
        
        public void testAllFilesPresentInFindWithFilteringImports() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findWithFilteringImports"), Pattern.compile("^(.*)Server.kt$"), true);
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/unresolvedAnnotation")
    public static class UnresolvedAnnotation extends AbstractJetFindUsagesTest {
        @TestMetadata("Server.kt")
        public void test() throws Exception {
            testFindUsagesUnresolvedAnnotation("idea/testData/findUsages/unresolvedAnnotation/Server.kt");
        }
        
        public void testAllFilesPresentInUnresolvedAnnotation() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/unresolvedAnnotation"), Pattern.compile("^(.*)Server.kt$"), true);
        }
        
    }
    
    public static Test suite() {
        TestSuite suite = new TestSuite("JetFindUsagesTest");
        suite.addTestSuite(JavaClassUsages.class);
        suite.addTestSuite(KotlinClassUsages1.class);
        suite.addTestSuite(KotlinClassUsages2.class);
        suite.addTestSuite(KotlinClassUsages3.class);
        suite.addTestSuite(JavaObjectUsages.class);
        suite.addTestSuite(KotlinObjectUsages.class);
        suite.addTestSuite(JavaMethodUsages.class);
        suite.addTestSuite(KotlinMethodUsages.class);
        suite.addTestSuite(JavaPropertyUsages.class);
        suite.addTestSuite(KotlinPropertyUsages.class);
        suite.addTestSuite(FindWithFilteringImports.class);
        suite.addTestSuite(UnresolvedAnnotation.class);
        return suite;
    }
}
