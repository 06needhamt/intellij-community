
class NoC
class NoC1 : NoC

class WithC0() : NoC<error>()</error>
class WithC1() : NoC
class NoC2 : <error>WithC1</error>
class NoC3 : WithC1<error>()</error>
class WithC2() : <error>WithC1</error>

class NoPC {
  <error>this</error>() {}
}

class WithPC0() {
  this(a : Int) : this() {}
}

class WithPC1(a : Int) {
  <error>this</error>() {}

  this(b : Long) : this("") {}

  this(s : String) : this(1) {}

  this(b : Char) : this<error>("", 2)</error> {}

  this(b : Byte) : this(""), <error>this(1)</error> {}
}


class Foo() : <error>WithPC0</error>, <error>this</error>() {

}

class WithCPI_Dup(<error>x</error> : Int) {
  var <error>x</error> : Int
}

class WithCPI(x : Int) {
  val a = 1
  val b : Int = $a
  val xy : Int = x
}

class <error>NoCPI</error> {
  val a = <error>1</error>
  var ab = <error>1</error>
    get() = 1
    set(v) {}
}