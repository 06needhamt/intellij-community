import java.util.*;

class NotRange1() {

}

class NotRange2() {
  fun iterator() : Unit
}

class ImproperIterator1 {
  fun hasNext() : Boolean
}

class NotRange3() {
  fun iterator() : ImproperIterator1
}

class ImproperIterator2 {
  fun next() : Boolean
}

class NotRange4() {
  fun iterator() : ImproperIterator2
}

class ImproperIterator3 {
  fun hasNext() : Int
  fun next() : Int
}

class NotRange5() {
  fun iterator() : ImproperIterator3
}

class AmbiguousHasNextIterator {
  fun hasNext() : Boolean
  val hasNext : Boolean get() = false
  fun next() : Int
}

class NotRange6() {
  fun iterator() : AmbiguousHasNextIterator
}

class ImproperIterator4 {
  val hasNext : Int get() = 1
  fun next() : Int
}

class NotRange7() {
  fun iterator() : ImproperIterator3
}

class GoodIterator {
  fun hasNext() : Boolean
  fun next() : Int
}

class Range0() {
  fun iterator() : GoodIterator
}

class Range1() {
  fun iterator() : Iterator<Int>
}

fun test() {
  for (i in <error>NotRange1()</error>);
  for (i in <error>NotRange2()</error>);
  for (i in <error>NotRange3()</error>);
  for (i in <error>NotRange4()</error>);
  for (i in <error>NotRange5()</error>);
  for (i in <error>NotRange6()</error>);
  for (i in <error>NotRange7()</error>);
  for (i in Range0());
  for (i in Range1());

  for (i in (ArrayList<Int>() : List<Int>));
}

