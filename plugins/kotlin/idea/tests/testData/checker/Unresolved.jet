namespace unresolved

fun testGenericArgumentsCount() {
    val p1: Tuple2<error><Int></error> = (2, 2)
    val p2: <error>Tuple2</error> = (2, 2)
}

fun testUnresolved() {
    if (<error>a</error> is String) {
        val s = <error>a</error>
    }
    <error>foo</error>(<error>a</error>)
    val s = "s"
    <error>foo</error>(s)
    foo1(<error>i</error>)
    s.<error>foo</error>()

    when(<error>a</error>) {
        is Int => <error>a</error>
        is String => <error>a</error>
    }

    //TODO
    for (j in <error>collection</error>) {
       val i: Int = j
       j += 1
    }
}

fun foo1(i: Int) {}
