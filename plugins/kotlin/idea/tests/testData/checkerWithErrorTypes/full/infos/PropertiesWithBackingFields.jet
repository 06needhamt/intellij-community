abstract class Test() {
    abstract val x : Int
    abstract val x1 : Int get
    abstract val x2 : Int <!ABSTRACT_PROPERTY_WITH_GETTER!>get() = 1<!>

    val <!MUST_BE_INITIALIZED_OR_BE_ABSTRACT!>a<!> : Int
    val <!MUST_BE_INITIALIZED_OR_BE_ABSTRACT!>b<!> : Int get
    val c = 1

    val c1 = 1
      get
    val c2 : Int
        get() = 1
    val c3 : Int
        get() { return 1 }
    val c4 : Int
        get() = 1
    val <!MUST_BE_INITIALIZED!>c5<!> : Int
        get() = $c5 + 1

    abstract var y : Int
    abstract var y1 : Int get
    abstract var y2 : Int set
    abstract var y3 : Int set get
    abstract var y4 : Int set <!ABSTRACT_PROPERTY_WITH_GETTER!>get() = 1<!>
    abstract var y5 : Int <!ABSTRACT_PROPERTY_WITH_SETTER!>set(x) {}<!> <!ABSTRACT_PROPERTY_WITH_GETTER!>get() = 1<!>
    abstract var y6 : Int <!ABSTRACT_PROPERTY_WITH_SETTER!>set(x) {}<!>

    var <!MUST_BE_INITIALIZED_OR_BE_ABSTRACT!>v<!> : Int
    var <!MUST_BE_INITIALIZED_OR_BE_ABSTRACT!>v1<!> : Int get
    var <!MUST_BE_INITIALIZED_OR_BE_ABSTRACT!>v2<!> : Int get set
    var <!MUST_BE_INITIALIZED!>v3<!> : Int get() = 1; set
    var v4 : Int get() = 1; set(x){}

    var <!MUST_BE_INITIALIZED!>v5<!> : Int get() = 1; set(x){$v5 = x}
    var <!MUST_BE_INITIALIZED!>v6<!> : Int get() = $v6 + 1; set(x){}

  val v7 : Int abstract get
  var v8 : Int abstract get abstract set
  var <!MUST_BE_INITIALIZED_OR_BE_ABSTRACT!>v9<!> : Int abstract set
  var <!MUST_BE_INITIALIZED_OR_BE_ABSTRACT!>v10<!> : Int abstract get

}

open class Super(i : Int)

class TestPCParameters(w : Int, x : Int, val y : Int, var z : Int) : Super(w) {

  val xx = w

  {
    w + 1
  }

  fun foo() = x

}