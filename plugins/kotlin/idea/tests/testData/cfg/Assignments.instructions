== assignments ==
fun assignments() : Unit {
    var x = 1
    x = 2
    x += 2

    x = if (true) 1 else 2

    val y = true && false
    val z = false && true

    val t = Test();
    t.x = 1
}
---------------------
l0:
    <START>
    r(1)
    w(x)
    r(2)
    w(x)
    r(x)
    r(2)
    r(+=)
    w(x)
    r(true)
    jf(l2)
    r(1)
    jmp(l3)
l2:
    r(2)
l3:
    w(x)
    r(true)
    jf(l4)
    r(false)
l4:
    r(true && false)
    w(y)
    r(false)
    jf(l5)
    r(true)
l5:
    r(false && true)
    w(z)
    r(Test)
    r(Test())
    w(t)
    r(1)
    r(t)
    r(=)
    w(t.x)
l1:
    <END>
error:
    <ERROR>
=====================
== x ==
var x = 1
---------------------
l0:
    <START>
    r(1)
l1:
    <END>
error:
    <ERROR>
=====================
== y ==
val y = true && false
---------------------
l0:
    <START>
    r(true)
    jf(l2)
    r(false)
l2:
    r(true && false)
l1:
    <END>
error:
    <ERROR>
=====================
== z ==
val z = false && true
---------------------
l0:
    <START>
    r(false)
    jf(l2)
    r(true)
l2:
    r(false && true)
l1:
    <END>
error:
    <ERROR>
=====================
== t ==
val t = Test()
---------------------
l0:
    <START>
    r(Test)
    r(Test())
l1:
    <END>
error:
    <ERROR>
=====================
