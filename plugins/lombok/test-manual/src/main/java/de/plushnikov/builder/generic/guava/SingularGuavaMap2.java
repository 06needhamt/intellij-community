// Generated by delombok at Fri Jun 10 17:36:46 CEST 2016
package de.plushnikov.builder.generic.guava;

import com.google.common.collect.ImmutableList;

public class SingularGuavaMap2<T> {
	private ImmutableList rawTypes;
	private ImmutableList<Integer> integers;
	private ImmutableList<T> generics;
	private ImmutableList<? extends Number> extendsGenerics;

	public static void main(String[] args) {
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	SingularGuavaMap2(final ImmutableList rawTypes, final ImmutableList<Integer> integers, final ImmutableList<T> generics, final ImmutableList<? extends Number> extendsGenerics) {
		this.rawTypes = rawTypes;
		this.integers = integers;
		this.generics = generics;
		this.extendsGenerics = extendsGenerics;
	}


	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public static class SingularGuavaMapBuilder<T> {
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		private com.google.common.collect.ImmutableList.Builder<java.lang.Object> rawTypes;
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		private com.google.common.collect.ImmutableList.Builder<Integer> integers;
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		private com.google.common.collect.ImmutableList.Builder<T> generics;
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		private com.google.common.collect.ImmutableList.Builder<Number> extendsGenerics;

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		SingularGuavaMapBuilder() {
		}

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public SingularGuavaMapBuilder<T> rawType(final java.lang.Object rawType) {
			if (this.rawTypes == null) this.rawTypes = com.google.common.collect.ImmutableList.builder();
			this.rawTypes.add(rawType);
			return this;
		}

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public SingularGuavaMapBuilder<T> rawTypes(final java.lang.Iterable<?> rawTypes) {
			if (this.rawTypes == null) this.rawTypes = com.google.common.collect.ImmutableList.builder();
			this.rawTypes.addAll(rawTypes);
			return this;
		}

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public SingularGuavaMapBuilder<T> clearRawTypes() {
			this.rawTypes = null;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public SingularGuavaMapBuilder<T> integer(final Integer integer) {
			if (this.integers == null) this.integers = com.google.common.collect.ImmutableList.builder();
			this.integers.add(integer);
			return this;
		}

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public SingularGuavaMapBuilder<T> integers(final java.lang.Iterable<? extends Integer> integers) {
			if (this.integers == null) this.integers = com.google.common.collect.ImmutableList.builder();
			this.integers.addAll(integers);
			return this;
		}

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public SingularGuavaMapBuilder<T> clearIntegers() {
			this.integers = null;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public SingularGuavaMapBuilder<T> generic(final T generic) {
			if (this.generics == null) this.generics = com.google.common.collect.ImmutableList.builder();
			this.generics.add(generic);
			return this;
		}

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public SingularGuavaMapBuilder<T> generics(final java.lang.Iterable<? extends T> generics) {
			if (this.generics == null) this.generics = com.google.common.collect.ImmutableList.builder();
			this.generics.addAll(generics);
			return this;
		}

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public SingularGuavaMapBuilder<T> clearGenerics() {
			this.generics = null;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public SingularGuavaMapBuilder<T> extendsGeneric(final Number extendsGeneric) {
			if (this.extendsGenerics == null) this.extendsGenerics = com.google.common.collect.ImmutableList.builder();
			this.extendsGenerics.add(extendsGeneric);
			return this;
		}

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public SingularGuavaMapBuilder<T> extendsGenerics(final java.lang.Iterable<? extends Number> extendsGenerics) {
			if (this.extendsGenerics == null) this.extendsGenerics = com.google.common.collect.ImmutableList.builder();
			this.extendsGenerics.addAll(extendsGenerics);
			return this;
		}

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public SingularGuavaMapBuilder<T> clearExtendsGenerics() {
			this.extendsGenerics = null;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public SingularGuavaMap2<T> build() {
			com.google.common.collect.ImmutableList<java.lang.Object> rawTypes = this.rawTypes == null ? com.google.common.collect.ImmutableList.<java.lang.Object>of() : this.rawTypes.build();
			com.google.common.collect.ImmutableList<Integer> integers = this.integers == null ? com.google.common.collect.ImmutableList.<Integer>of() : this.integers.build();
			com.google.common.collect.ImmutableList<T> generics = this.generics == null ? com.google.common.collect.ImmutableList.<T>of() : this.generics.build();
			com.google.common.collect.ImmutableList<Number> extendsGenerics = this.extendsGenerics == null ? com.google.common.collect.ImmutableList.<Number>of() : this.extendsGenerics.build();
			return new SingularGuavaMap2<T>(rawTypes, integers, generics, extendsGenerics);
		}

		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		@javax.annotation.Generated("lombok")
		public java.lang.String toString() {
			return "SingularGuavaMap2.SingularGuavaMapBuilder(rawTypes=" + this.rawTypes + ", integers=" + this.integers + ", generics=" + this.generics + ", extendsGenerics=" + this.extendsGenerics + ")";
		}
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public static <T> SingularGuavaMapBuilder<T> builder() {
		return new SingularGuavaMapBuilder<T>();
	}
}
