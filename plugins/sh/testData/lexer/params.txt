$ ('$')
{ ('{')
word ('parameter:offset')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter:offset:length')
} ('}')
\n ('\n')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter:-word')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter:')
= ('=')
word ('word')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter:?word')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter:+word')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
} ('}')
\n ('\n')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter@Q')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter@E')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter@P')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter@A')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter@a')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter@@')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter@*')
} ('}')
\n ('\n')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
Parameter expansion operator '^' ('^')
word ('pattern')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
Parameter expansion operator '^^' ('^^')
word ('pattern')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
Parameter expansion operator ',' (',')
word ('pattern')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
Parameter expansion operator ',,' (',,')
word ('pattern')
} ('}')
\n ('\n')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
Parameter expansion operator '/' ('/')
Parameter expansion regex pattern ('pattern')
Parameter expansion operator '/' ('/')
word ('string')
} ('}')
\n ('\n')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
Parameter expansion operator '%' ('%')
word ('word')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
Parameter expansion operator '%' ('%')
Parameter expansion operator '%' ('%')
word ('word')
} ('}')
\n ('\n')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
Parameter expansion operator '#' ('#')
word ('word')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
word ('parameter')
Parameter expansion operator '##' ('##')
word ('word')
} ('}')
\n ('\n')
\n ('\n')
$ ('$')
{ ('{')
Parameter expansion operator '#' ('#')
word ('parameter')
} ('}')
\n ('\n')
\n ('\n')
$ ('$')
{ ('{')
Parameter expansion operator '!' ('!')
word ('name')
[ ('[')
Parameter expansion operator '@' ('@')
] (']')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
Parameter expansion operator '!' ('!')
word ('name')
[ ('[')
Parameter expansion operator '*' ('*')
] (']')
} ('}')
\n ('\n')
\n ('\n')
$ ('$')
{ ('{')
Parameter expansion operator '!' ('!')
word ('prefix')
Parameter expansion operator '*' ('*')
} ('}')
\n ('\n')
$ ('$')
{ ('{')
Parameter expansion operator '!' ('!')
word ('prefix')
Parameter expansion operator '@' ('@')
} ('}')
\n ('\n')
\n ('\n')
\n ('\n')
\n ('\n')
\n ('\n')
assignment_word ('NEW_USERNAME')
= ('=')
$ ('$')
{ ('{')
word ('NEW_USERNAME')
Parameter expansion operator ':-' (':-')
word ('builduser')
} ('}')
\n ('\n')
\n ('\n')
assignment_word ('REPOSITORY')
= ('=')
string_begin ('"')
string_content ('http://repo.labs.intellij.net/cache/')
$ ('$')
{ ('{')
word ('REPOSITORY')
Parameter expansion operator '/' ('/')
Parameter expansion regex pattern ('https:\/')
Parameter expansion operator '/' ('/')
word ('https')
} ('}')
string_end ('"')
\n ('\n')
\n ('\n')
word ('local')
WHITE_SPACE (' ')
assignment_word ('wait_seconds')
= ('=')
string_begin ('"')
$ ('$')
{ ('{')
word ('2')
Parameter expansion operator ':-' (':-')
word ('10')
} ('}')
string_end ('"')
WHITE_SPACE (' ')
Comment ('# 10 seconds as default timeout')
\n ('\n')
\n ('\n')
assignment_word ('OLD_USERNAME')
= ('=')
$ ('$')
{ ('{')
word ('OLD_USERNAME')
Parameter expansion operator ':-' (':-')
word ('jetbrains')
} ('}')
\n ('\n')
\n ('\n')
assignment_word ('DISTRIB_MAJOR')
= ('=')
string_begin ('"')
$ ('$')
{ ('{')
word ('DISTRIB_RELEASE')
Parameter expansion operator '%' ('%')
Parameter expansion operator '.' ('.')
Parameter expansion operator '*' ('*')
} ('}')
string_end ('"')
\n ('\n')
\n ('\n')
word ('echo')
WHITE_SPACE (' ')
string_begin ('"')
string_content ('export ')
$ ('$')
{ ('{')
word ('NAME')
Parameter expansion operator '^^' ('^^')
} ('}')
string_content ('_HOME=')
var ('$DIR')
string_end ('"')
WHITE_SPACE (' ')
> ('>')
word ('/etc/profile.d/')
var ('$NAME')
word ('.sh')
\n ('\n')
\n ('\n')
assignment_word ('HOMEBREW_PACKAGES')
= ('=')
( ('(')
var ('$HOMEBREW_PACKAGES')
) (')')
\n ('\n')
for ('for')
WHITE_SPACE (' ')
word ('PKG')
WHITE_SPACE (' ')
word ('in')
WHITE_SPACE (' ')
$ ('$')
{ ('{')
word ('HOMEBREW_PACKAGES')
[ ('[')
Parameter expansion operator '@' ('@')
] (']')
} ('}')
\n ('\n')
do ('do')
\n ('\n')
WHITE_SPACE ('	')
word ('/usr/local/bin/brew')
WHITE_SPACE (' ')
word ('install')
WHITE_SPACE (' ')
var ('$PKG')
\n ('\n')
done ('done')
\n ('\n')
\n ('\n')
word ('local')
WHITE_SPACE (' ')
assignment_word ('URL')
= ('=')
string_begin ('"')
$ ('$')
{ ('{')
word ('3')
Parameter expansion operator ':-' (':-')
word ('http')
Parameter expansion operator ':' (':')
Parameter expansion operator '//' ('//')
Parameter expansion regex pattern ('repo.labs.intellij.net')
Parameter expansion operator '/' ('/')
word ('download/oracle/$FILE')
} ('}')
string_end ('"')
\n ('\n')
\n ('\n')
\n ('\n')
for ('for')
WHITE_SPACE (' ')
word ('component')
WHITE_SPACE (' ')
word ('in')
WHITE_SPACE (' ')
$ ('$')
{ ('{')
word ('distrs')
[ ('[')
Parameter expansion operator '*' ('*')
] (']')
} ('}')
\n ('\n')
do ('do')
\n ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
word ('wget')
WHITE_SPACE (' ')
word ('-nv')
WHITE_SPACE (' ')
string_begin ('"')
string_content ('http://repo.labs.intellij.net/download/oracle/')
$ ('$')
{ ('{')
word ('component')
} ('}')
string_end ('"')
\n ('\n')
done ('done')
\n ('\n')
\n ('\n')
assignment_word ('ARGS')
= ('=')
string_begin ('"')
string_content ('--install /usr/bin/java java ')
var ('$JAVA_HOME')
string_content ('/bin/java 100')
string_end ('"')
\n ('\n')
for ('for')
WHITE_SPACE (' ')
word ('i')
WHITE_SPACE (' ')
word ('in')
WHITE_SPACE (' ')
string_begin ('"')
$ ('$')
{ ('{')
word ('commands')
[ ('[')
Parameter expansion operator '@' ('@')
] (']')
} ('}')
string_end ('"')
; (';')
WHITE_SPACE (' ')
do ('do')
\n ('\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
assignment_word ('ARGS')
= ('=')
string_begin ('"')
var ('$ARGS')
string_content (' --slave /usr/bin/')
var ('$i')
string_content (' ')
var ('$i')
string_content (' ')
var ('$JAVA_HOME')
string_content ('/bin/')
var ('$i')
string_end ('"')
\n ('\n')
done ('done')
\n ('\n')
\n ('\n')
assignment_word ('JDK_VER')
= ('=')
$ ('$')
{ ('{')
word ('JDK_VER')
Parameter expansion operator ':-' (':-')
word ('8')
Parameter expansion operator '.' ('.')
word ('181')
} ('}')
\n ('\n')
\n ('\n')
assignment_word ('DISTRIB_MAJOR')
= ('=')
$ ('$')
{ ('{')
word ('DISTRIB_RELEASE')
Parameter expansion operator '%' ('%')
Parameter expansion operator '.' ('.')
Parameter expansion operator '*' ('*')
} ('}')
\n ('\n')
\n ('\n')
\n ('\n')
word ('//')
WHITE_SPACE (' ')
word ('array')
\n ('\n')
word ('declare')
WHITE_SPACE (' ')
word ('-A')
WHITE_SPACE (' ')
assignment_word ('SHA256MAP')
= ('=')
( ('(')
WHITE_SPACE (' ')
word ('\\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
[ ('[')
string_begin ('"')
string_content ('11')
string_end ('"')
] (']')
= ('=')
string_begin ('"')
string_content ('3784cfc4670f0d4c5482604c7c513beb1a92b005f569df9bf100e8bef6610f2e')
string_end ('"')
WHITE_SPACE (' ')
word ('\\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
[ ('[')
string_begin ('"')
string_content ('9.0.4')
string_end ('"')
] (']')
= ('=')
string_begin ('"')
string_content ('39362fb9bfb341fcc802e55e8ea59f4664ca58fd821ce956d48e1aa4fb3d2dec')
string_end ('"')
WHITE_SPACE (' ')
word ('\\n')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
WHITE_SPACE (' ')
[ ('[')
string_begin ('"')
string_content ('10')
string_end ('"')
] (']')
= ('=')
string_begin ('"')
string_content ('c851df838a51af52517b74e3a4b251d90c54cf478a4ebed99e7285ef134c3435')
string_end ('"')
) (')')
\n ('\n')
\n ('\n')
assignment_word ('type')
= ('=')
string_begin ('"')
$ ('$')
{ ('{')
word ('entry')
[ ('[')
BAD_CHARACTER ('[')
word (':space:')
] (']')
] (']')
Parameter expansion operator '*' ('*')
} ('}')
string_end ('"')