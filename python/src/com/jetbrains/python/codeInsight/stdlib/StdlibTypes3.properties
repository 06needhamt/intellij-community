# Python 3.2 stdlib


## 4.6. Sequence types

builtins.bytes.capitalize = \
  :rtype: bytes \n\

builtins.bytes.center = \
  :type width: int or long \n\
  :type fillchar: bytes or None \n\
  :rtype: bytes \n\

builtins.bytes.count = \
  :type sub: bytes \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: int or long \n\

builtins.bytes.decode = \
  :type encoding: str \n\
  :type errors: str or None \n\
  :rtype: str \n\

builtins.bytes.encode = \
  :type encoding: str \n\
  :type errors: str or None \n\
  :rtype: bytes \n\

builtins.bytes.endswith = \
  :type suffix: bytes \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: bool \n\

builtins.bytes.find = \
  :type sub: bytes \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: int or long \n\

builtins.bytes.index = \
  :type sub: bytes \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: int or long \n\

builtins.bytes.isalnum = \
  :rtype: bool \n\

builtins.bytes.isalpha = \
  :rtype: bool \n\

builtins.bytes.isdigit = \
  :rtype: bool \n\

builtins.bytes.islower = \
  :rtype: bool \n\

builtins.bytes.isspace = \
  :rtype: bool \n\

builtins.bytes.istitle = \
  :rtype: bool \n\

builtins.bytes.isupper = \
  :rtype: bool \n\

builtins.bytes.join = \
  :type iterable: object \n\
  :rtype: bytes \n\

builtins.bytes.ljust = \
  :type width: int or long \n\
  :type fillchar: bytes or None \n\
  :rtype: bytes \n\

builtins.bytes.lower = \
  :rtype: bytes \n\

builtins.bytes.lstrip = \
  :type chars: bytes or None \n\
  :rtype: bytes \n\

builtins.bytes.partition = \
  :type sep: bytes \n\
  :rtype: (bytes, bytes, bytes) \n\

builtins.bytes.replace = \
  :type old: bytes \n\
  :type new: bytes \n\
  :type count: int or long \n\
  :rtype: bytes \n\

builtins.bytes.rfind = \
  :type sub: bytes \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: int or long \n\

builtins.bytes.rindex = \
  :type sub: bytes \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: int or long \n\

builtins.bytes.rpartition = \
  :type sep: bytes \n\
  :rtype: (bytes, bytes, bytes) \n\

builtins.bytes.rsplit = \
  :type sep: bytes or None \n\
  :type maxsplit: int or long or None \n\
  :rtype: list of bytes \n\

builtins.bytes.rstrip = \
  :type chars: bytes or None \n\
  :rtype: bytes \n\

builtins.bytes.split = \
  :type sep: bytes or None \n\
  :type maxsplit: int or long or None \n\
  :rtype: list of bytes \n\

builtins.bytes.splitlines = \
  :type keepends: bool or int or long or None \n\
  :rtype: list of bytes \n\

builtins.bytes.startswith = \
  :type prefix: bytes \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: bool \n\

builtins.bytes.strip = \
  :type chars: bytes or None \n\
  :rtype: bytes \n\

builtins.bytes.swapcase = \
  :rtype: bytes \n\

builtins.bytes.title = \
  :rtype: bytes \n\

builtins.bytes.translate = \
  :type table: object \n\
  :type deletechars: bytes \n\
  :rtype: bytes \n\

builtins.bytes.upper = \
  :rtype: bytes \n\

builtins.bytes.zfill = \
  :type width: int or long \n\
  :rtype: bytes \n\

builtins.str.capitalize = \
  :rtype: str \n\

builtins.str.center = \
  :type width: int or long \n\
  :type fillchar: str or None \n\
  :rtype: str \n\

builtins.str.count = \
  :type sub: str \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: int or long \n\

builtins.str.decode = \
  :type encoding: str \n\
  :type errors: str or None \n\
  :rtype: str \n\

builtins.str.encode = \
  :type encoding: str \n\
  :type errors: str or None \n\
  :rtype: bytes \n\

builtins.str.endswith = \
  :type suffix: str \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: bool \n\

builtins.str.find = \
  :type sub: str \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: int or long \n\

builtins.str.index = \
  :type sub: str \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: int or long \n\

builtins.str.isalnum = \
  :rtype: bool \n\

builtins.str.isalpha = \
  :rtype: bool \n\

builtins.str.isdecimal = \
  :rtype: bool \n\

builtins.str.isdigit = \
  :rtype: bool \n\

builtins.str.islower = \
  :rtype: bool \n\

builtins.str.isnumeric = \
  :rtype: bool \n\

builtins.str.isspace = \
  :rtype: bool \n\

builtins.str.istitle = \
  :rtype: bool \n\

builtins.str.isupper = \
  :rtype: bool \n\

builtins.str.join = \
  :type iterable: object \n\
  :rtype: str \n\

builtins.str.ljust = \
  :type width: int or long \n\
  :type fillchar: str or None \n\
  :rtype: str \n\

builtins.str.lower = \
  :rtype: str \n\

builtins.str.lstrip = \
  :type chars: str or None \n\
  :rtype: str \n\

builtins.str.partition = \
  :type sep: str \n\
  :rtype: (str, str, str) \n\

builtins.str.replace = \
  :type old: str \n\
  :type new: str \n\
  :type count: int or long \n\
  :rtype: str \n\

builtins.str.rfind = \
  :type sub: str \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: int or long \n\

builtins.str.rindex = \
  :type sub: str \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: int or long \n\

builtins.str.rpartition = \
  :type sep: str \n\
  :rtype: (str, str, str) \n\

builtins.str.rsplit = \
  :type sep: str or None \n\
  :type maxsplit: int or long or None \n\
  :rtype: list of str \n\

builtins.str.rstrip = \
  :type chars: str or None \n\
  :rtype: str \n\

builtins.str.split = \
  :type sep: str or None \n\
  :type maxsplit: int or long or None \n\
  :rtype: list of str \n\

builtins.str.splitlines = \
  :type keepends: bool or int or long or None \n\
  :rtype: list of str \n\

builtins.str.startswith = \
  :type prefix: str \n\
  :type start: int or long or None \n\
  :type end: int or long or None \n\
  :rtype: bool \n\

builtins.str.strip = \
  :type chars: str or None \n\
  :rtype: str \n\

builtins.str.swapcase = \
  :rtype: str \n\

builtins.str.title = \
  :rtype: str \n\

builtins.str.translate = \
  :type table: object \n\
  :type deletechars: str \n\
  :rtype: str \n\

builtins.str.upper = \
  :rtype: str \n\

builtins.str.zfill = \
  :type width: int or long \n\
  :rtype: str \n\

