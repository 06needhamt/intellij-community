project.configuration.save.file.not.found={0} not found
project.macros.cancel.button=Cancel Project Load
# the "Define macros" dialog is not fully implemented right now, so you can't see these strings in the IDEA UI yet
project.macros.variable.missing.error=Value for the path variable \"{0}\" is not defined
project.macros.variable.missing.title=Undefined Path Variable
project.macros.prompt=TODO: message
project.macros.name.column=Macro Name
project.macros.path.column=Path
project.save.error=Could not save project:\n{0}
project.save.settings.command=Save settings
project.load.undefined.path.variables.error=There are undefined path variables in project file
project.load.undefined.path.variables.message=There are undefined path variables in project configuration files.\nIn order for the project to load all path variables must be defined.
project.load.undefined.path.variables.all.needed=All path variables should be defined
project.load.undefined.path.variables.title=Path Variables Not Defined
project.load.default.error=Error Loading Default Project
project.load.progress=Loading Project
project.reload.external.change.single=Project file {0} has been changed externally.\n\nReload project?
project.reload.external.change.multiple=Project files:\n{0}\nhave been changed externally.\n\nReload project?
project.reload.external.change.title=Project Files Changed
project.reload.write.failed=Error writing to file ''{0}''. Project may reload incorrectly.
project.reload.write.failed.title=Write error
project.convert.old.prompt=The project {0} you are about to open has an older format.\n{1} will automatically convert it to the new format.\nYou will not be able to open it by earlier versions.\nThe old project file will be saved to {2}.\nProceed with conversion?
project.convert.problems.detected=During your project conversion, the following problem(s) were detected:
project.convert.problems.help=\n\nPress 'Show Help' for more information.
project.convert.problems.title=Project Conversion Problems
project.convert.problems.help.button=Show Help
project.load.new.version.warning=The project {0} you are about to open has been created by a newer version of {1}. If you open it, your project is likely to be corrupted. Continue?
project.default.settings=Default project settings
project.configure.path.variables.title=Configure Path Variables
project.convert.source.roots.not.under.project.roots.error=There are source roots that are not under project roots.
project.convert.javadoc.paths.error=JavaDoc paths cannot be converted.
project.convert.multiple.output.paths.error=The project uses multiple output paths.
project.import.eclipse.no.project=The directory ''{0}'' does not contain valid Eclipse project.\n\nPlease select directory with .project and .classpath files inside.
project.import.eclipse.no.installation=The directory ''{0}'' does not contain valid Eclipse installation.\n\n
project.import.eclipse.file.not.found=File ''{0}'' cannot be found
project.import.eclipse.file.not.found.title=File Not Found
project.import.eclipse.file.invalid.path=Invalid Path
project.import.eclipse.show.settings=Open Module Properties after import
project.import.eclipse.project=Eclipse project to import:
project.import.eclipse.home=Eclipse Home:
project.import.jbuilder.not.found=Project to import not found
project.import.jbuilder.not.found.title=Nothing Found To Import
project.import.jbuilder.module.creation.cancelled=Creation of module was cancelled by component: {0}\nReason is: {1}
project.import.jbuilder.module.creation.cancelled.title=Module Was Not Created
project.import.jbuilder.title=Import From JBuilder
project.import.jbuilder.error.adding.modules=Error adding modules to project: {0}
project.import.jbuilder.show.settings=Open Module Properties after import
project.import.jbuilder.user.home=JBuilder &User Home:
project.import.jbuilder.home=JBuilder &Home:
project.import.jbuilder.project=JBuilder &project to import:
project.import.jbuilder.user.home.title=Set User Home Location
project.import.jbuilder.user.home.prompt=Choose directory with JBuilder user's settings
project.import.jbuilder.home.title=Set JBuilder Home Location
project.import.jbuilder.home.prompt=Choose directory with JBuilder installation
project.import.jbuilder.project.title=Set JBuilder Project To Import
project.import.jbuilder.project.prompt=Choose directory with JBuilder project to import
project.import.jbuilder.dialog.title=Choose JBuilder Project To Import
sdk.java.name=JSDK
sdk.java.unknown.name=Unknown
sdk.java.corrupt.error=Probably JDK installed in ''{0}'' is corrupt
sdk.java.corrupt.title=Cannot Detect JDK Version
sdk.java.name.template=java version \"{0}\"
sdk.table.settings=JDK Table
sdk.unknown.name=Unknown SDK
sdk.list.remove.action=Remove SDK
sdk.list.apply.changes.error=Error Applying Changes to JDK
sdk.list.name.required.error=Please specify SDK name
sdk.list.unique.name.required.error=Please specify a different SDK name
button.add=&Add...
button.remove=&Remove
sdk.paths.specify.url.button=&Specify URL...
sdk.configure.title=Configure JDK
sdk.configure.save.settings.error=Cannot Save Settings
sdk.configure.editor.title=JDK Editor
sdk.configure.classpath.tab=Classpath
sdk.configure.sourcepath.tab=Sourcepath
sdk.configure.javadoc.tab=JavaDoc Paths
sdk.configure.name.label=&Name:
sdk.configure.type.home.path={0} home path:
sdk.configure.general.home.path=SDK home path:
sdk.configure.home.invalid.error=The directory selected is not a valid home for {0}
sdk.configure.home.title=Select Home Directory for {0}
sdk.configure.javadoc.url.prompt=Enter javadoc URL:
sdk.configure.javadoc.url.title=Specify Javadoc URL
project.index.scanning.files.progress=Scanning files...
project.index.building.exclude.roots.progress=Building exclude roots...
project.index.processing.module.content.progress=Processing module \"{0}\" content...
project.index.processing.module.sources.progress=Processing module \"{0}\" sources...
project.index.processing.library.sources.progress=Processing module \"{0}\" library sources...
project.index.processing.library.classes.progress=Processing module \"{0}\" library classes...
project.root.module.source=<Module source>
project.language.level.reload.prompt=Language level changes will take effect on project reload.\nWould you like to reload project \"{0}\" now?
project.language.level.reload.title=Language Level Changed
project.root.change.loading.progress=Loading Files...
library.global.settings=Global libraries
library.level.module=module
module.paths.title=Sources
module.paths.outside.module.dir.relative.radio=Relative
module.paths.outside.module.dir.absolute.radio=Absolute
module.paths.outside.module.dir.label=References to resources outside module file directory:
module.paths.output.title=Select Output Path
module.paths.test.output.title=Select Test Output Path
module.paths.exclude.output.checkbox=Exclude output paths
module.paths.output.label=Output path:
module.paths.test.output.label=Test output path:
module.paths.searching.source.roots.progress=Searching for source roots in {0}
module.paths.searching.source.roots.title=Adding Source Roots
module.paths.add.content.action=Add Content Root
module.paths.add.content.action.description=Add content root to the module
module.paths.add.content.title=Select content root directory
module.paths.add.content.prompt=Content root is a directory containing all files related to this module
module.paths.add.content.already.exists.error=Content root \"{0}\" already exists
module.paths.add.content.intersect.error=Content root being added \"{0}\"\nis located below existing content root \"{1}\".\nContent entries should not intersect.
module.paths.add.content.dominate.error=Content root being added \"{0}\"\ndominates existing content root \"{1}\".\nContent entries should not intersect.
module.paths.add.content.duplicate.error=Content root \"{0}\" already defined for module \"{1}\".\nTwo modules in a project cannot share the same content root.
module.paths.remove.content.prompt=Remove content root \"{0}\"?
module.paths.remove.content.title=Remove Content Root
module.paths.empty.node=<empty>
module.paths.sources.group=Source Folders
module.paths.test.sources.group=Test Source Folders
module.paths.excluded.group=Excluded Folders
module.paths.remove.content.tooltip=Remove Content Entry
module.paths.unmark.tests.tooltip=Unmark Tests
module.paths.unmark.source.tooltip=Unmark Source
module.paths.include.excluded.tooltip=Include
module.paths.remove.tooltip=Remove
module.paths.package.prefix.tooltip=Set package prefix
module.paths.package.prefix.prompt=Enter package prefix for {0}
module.paths.package.prefix.title=Set Package Prefix
module.dependencies.title=Dependencies
module.dependencies.caption=Check modules this module depends on
library.jdk_and_global.jdk.tab=JDK
library.jdk_and_global.global.tab=Global Libraries
library.jdk_and_global.title=JDK \\&\nGlobal Libraries
module.javadoc.title=Javadoc
module.javadoc.add.path.button=&Add Path...
module.javadoc.add.url.button=Add Javadoc &URL...
module.javadoc.remove.button=&Remove
module.javadoc.add.path.title=Add Path To Javadoc
module.javadoc.add.path.prompt=Select jar/zip files or directories in which module javadoc documentation is located
jdk.combo.box.project.item=Project JDK
jdk.combo.box.none.item=<None>
jdk.combo.box.invalid.item={0} [Invalid]
module.libraries.title=Libraries (Classpath)
module.libraries.target.jdk.group=Target JDK
module.libraries.module.libraries.group=Module Libraries:
module.libraries.project.libraries.group=Used Project Libraries:
module.libraries.global.libraries.group=Used Global Libraries:
module.libraries.target.jdk.project.radio=<html><b>&Project JDK:</b><br>This JDK is default for all project modules.<br>\
  A module specific JDK can be configured for each of the modules as required</html>
module.libraries.target.jdk.module.radio=&Module JDK:
module.libraries.target.jdk.select.title=Select Project JDK
module.libraries.unknown.item=Unknown
module.libraries.rename.button=&Rename Library
module.libraries.javadoc.url.button=Specify Javadoc &URL...
module.libraries.remove.button=R&emove
module.libraries.javadoc.attach.button=Attach &Javadoc...
module.libraries.attach.sources.button=Attach &Sources...
module.libraries.attach.classes.button=Attach &Classes...
module.libraries.add.button=&Add Library...
modules.title=Modules
modules.list.caption=Modules:
module.paths.outside.project.dir.label=<html><b>References to resources outside project file directory:</b></html>
module.module.language.level=&Language level (effective on project reload):
module.circular.dependency.warning=<b>There {1, choice, 1#is circular dependency|2#are circular dependencies} between modules:</b> {0}
module.add.error.message=Error adding module to project: {0}
module.add.error.title=Add Module
module.add.action=Add
module.add.action.description=Add module to the project
module.remove.action=Remove
module.remove.action.description=Remove module from the project
module.remove.last.confirmation=Are you sure you want to remove the only module from this project?\nNo files will be deleted on disk.
module.remove.confirmation=Remove module \"{0}\" from the project?\nNo files will be deleted on disk.
module.remove.confirmation.title=Remove Module
module.project.language.level.changed.reload.prompt=Language level has been changed.\nReload project \"{0}\"?
button.edit=&Edit...
module.libraries.include.all.button=Include All
module.libraries.exclude.all.button=Exclude All
modules.order.export.title=Order/Export
modules.classpath.title=Classpath
modules.order.export.export.column=Export
button.move.up=Move &Up
button.move.down=Move &Down
library.project.title=Project Libraries
module.remove.confirmation.prompt=Remove Module ''{0}'' from the project?\nNo files will be deleted.
module.remove.command=Detach module from project
module.new.action=New Module
module.new.action.description=Add new module to the project
module.new.creation.cancelled.message=Creation of module was cancelled by component: {0}\nReason is: {1}
module.new.creation.cancelled.title=Module Was Not Created
module.new.error.message=Error adding module to project: {0}
module.new.error.title=New Module
module.toggle.excluded.action=Excluded
module.toggle.excluded.action.description=Include/Exclude directory from module
module.toggle.test.sources.action=Test Sources
module.toggle.test.sources.action.description=Mark directory as a Test Sources root
module.toggle.sources.action=Sources
module.toggle.sources.action.description=Mark directory as a Sources root
library.classes.node=Classes
library.javadocs.node=JavaDocs
library.empty.item=<empty library>
library.name.prompt=Library name:
library.name.not.specified.error=Please enter library name
library.name.not.specified.title=Library Name Not Specified
library.name.already.exists.error=Library \"{0}\" already exists
library.name.already.exists.title=Library Already Exists
library.files.not.selected.error=Please select files or directories to be added to the library
library.files.not.selected.title=Library Files Not Selected
library.create.library.action=Create &Library...
library.add.jar.directory.action=Add &Jar/Directory...
classpath.add.jar.directory.action=Jar/Directory...
classpath.add.project.library.action=Project Library...
classpath.add.global.library.action=Global Library...
classpath.add.module.dependency.action=Module Dependency...
classpath.add.appserver.library.action=Application Server Library...
classpath.chooser.title.add.project.library=Add Project-Level Library
classpath.chooser.title.add.global.library=Add Global Library
classpath.chooser.title.add.module.dependency=Choose Dependent Modules
message.no.module.dependency.candidates=Found no modules to depend on
library.choose.classes.title=Choose Library Classes
library.choose.classes.description=Select jars or directories in which library classes can be found
library.attach.classes.to.library.action=Attach Classes to Library \"{0}\"
library.attach.classes.action=Attach Classes
library.attach.classes.description=Select jar/zip files or directories in which library classes are located
library.attach.sources.action=Attach Sources
library.attach.sources.description=Select jar/zip files or directories in which library sources are located
library.attach.javadoc.action=Attach Javadoc
library.attach.javadoc.description=Select jar/zip files or directories in which library javadoc documentation is located
library.rename.prompt=Enter new library name
library.rename.title=Rename library \"{0}\"
library.configure.project.title=Configure Project Libraries
library.configure.global.title=Configure Global Libraries
library.configure.appserver.title=Configure Application Server Libraries
library.detach.action=Detach
library.remove.action=Remove
library.root.node=Root
library.sources.node=Sources
project.order.entry.project=<Project>
item.remove.action=Remove
jdk.missing.item=<No JDK>
library.empty.library.item=Empty Library
module.type.ejb.description=\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;<b>EJB module</b> hosts standard EJB deployment descriptor (<b>ejb-jar.xml</b>) and all <b>EJB</b>s it references. <br>\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;Use this module type to create and edit your <b>EJB</b>s and deployment descriptor settings.
module.type.ejb.name=Ejb Module
module.type.j2ee.name=Java EE Application Module
module.type.j2ee.description=\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;<b>Java EE Application module</b> packages other Java EE modules, like <b>EJB</b> or <b>Web</b>, inside Java EE application archive (EAR file), using standard Java EE Application deployment descriptor (<b>application.xml</b>). <br>\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;Use this module type to create your Java EE application containing other Java EE modules.
module.type.java.name=Java Module
module.type.java.description=<b>Java module</b> is a part of a project describing a set of java sources, paths, libraries, etc.
module.type.unknown.name=Unknown module type. Used \"{0}\" as a substitute
module.type.web.name=Web Module
module.type.web.description=\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;<b>Web module</b> hosts standard Web deployment descriptor (<b>web.xml</b>) and all <b>Servlets/Filters/JSPs</b> it references. <br>\\&nbsp;\\&nbsp;\\&nbsp;\\&nbsp;Use this module type to create Web application and edit deployment descriptor settings and other web resources.
module.already.exists.error=Module ''{0}'' already exists in the project.
module.source.roots.not.configured.error=No Source Roots configured for module {0}\nPlease use Settings | Paths to configure roots.
module.source.roots.not.configured.title=No Source Roots Configured
module.cannot.load.error=Cannot load module: {0}
module.corrupted.file.error=Invalid or corrupted module file ''{0}'':\n{1}
module.corrupted.data.error=Corrupted module data at: {0}
module.loading.cancelled.error=Cancelled loading of module from:{0}\nCancelled by component: {1}\nReason is: {2}
module.loading.cancelled.title=Module Loading Cancelled
module.loading.cancelled.load.later.action=Try to load &later
module.loading.cancelled.remove.action=&Remove from project
module.unknown.type.single.error=Cannot determine module type for the following module:\n\"{0}\"\nThe module will be treated as a Java module.
module.unknown.type.multiple.error=Cannot determine module type for the following modules:\n{0}\nAll mentioned modules will be treated as JAVA modules.
module.unknown.type.title=Unknown Module Type
module.remove.from.project.confirmation={0}\nWould you like to remove the module from the project?
module.remove.from.project.title=Cannot Load Module
module.file.does.not.exist.error=File {0} does not exist
module.use.project.language.level=Use project language level
libraries.node.display.name={0, choice, 1#Global|2#Application server|3#Project} libraries
libraries.node.text.ide=Libraries contain classes that add up various functionality to your applications. \
  Libraries also include source files and JavaDocs that can help you develop your projects.<br><br>\
  \
  IntelliJ IDEA uses libraries to assist you with code completion, validation, error highlighting, etc.<br><br>\
  \
  Global libraries are referenced through the entire project and can be used from all modules. \
  Also they are available to all projects create locally on your computer.<br><br>\
  \
  Note that Global libraries are not available to anybody you share your project with. \
  If you are sharing project with your team, please use Project libraries instead.<br><br>\
  \
  Expand the node and select child items to manage Global libraries. <br><br> \
  \
  To attach a library to a module, select that module, click the Classpath tab, click Add and specify the library location.
libraries.node.text.application.server=Libraries contain classes that add up various functionality to your applications. \
  Libraries also include source files and JavaDocs that can help you develop your projects.<br><br> \
  \
  IntelliJ IDEA uses libraries to assist you with code completion, validation, error highlighting, etc.<br><br>\
  \
  Application server libraries are the part of an application server (WebSphere, WebLogic, Tomcat etc.) and are available to \
  your Web and Java EE applications that are configured with these servers.<br><br>\
  \
  Expand the node and select child items to manage Application server libraries that are installed in your system. <br><br> \
  \
  To attach a library to a module, select that module, click the Classpath tab, click Add and specify the library location.
libraries.node.text.project=Libraries contain classes that add up various functionality to your applications. \
  Libraries also include source files and JavaDocs that can help you develop your projects.<br><br>\
  \
  IntelliJ IDEA uses libraries to assist you with code completion, validation, error highlighting, etc.<br><br>\
  \
  Project libraries are referenced through the entire project and can be used from all modules. \
  Also they are available to everybody you share the project with.<br><br>\
  \
  Expand the node and select child items to manage Project libraries.<br><br> \
  \
  To attach a library to a module, select that module, click the Classpath tab, click Add and specify the library location.
jdks.node.display.name=JDKs
project.language.level.combo.item=<Use project language level>
add.action.name=Add new ...
add.new.module.text=Module
add.new.jdk.text=Jdk
add.new.library.text=Library
add.new.global.library.text=Global library
add.new.project.library.text=Project library
project.roots.display.name=Project Structure
add.new.library.title=Add new library
add.new.jdk.title=Add jdk
project.inherit.compile.output.path=Inherit project compile output path
project.module.compile.output.path=Use module compile output path
project.compiler.output=<html><b>Project compiler output:</b><br>This path is used to store all project compilation results. <br>\
  A directory corresponding to each module is created under this path. <br>This directory contains two subdirectories: Production and Test for production code and test sources, respectively.<br>\
  A module specific compiler output path can be configured for each of the modules as required</html>
find.usages.action.text=Find usages
dependencies.used.in.popup.title=Used in
project.language.level=<html><b>Project language level:</b><br>This language level is default for all project modules.<br>\
  A module specific language level can be configured for each of the modules as required</html>
classpath.panel.navigate.action.text=Navigate
output.tab.title=Output
project.roots.module.banner.text=Module ''{0}''
project.roots.library.banner.text= {1, choice, 1#Global|2#Application Server|3#Project|4#Module} Library ''{0}''
add.new.module.library.text=Module library
project.roots.project.banner.text=Project ''{0}''
project.roots.set.up.jdk.title=Set up {0, choice, 1#module|2#project} JDK
project.roots.no.jdk.on.project.message=Set up created jdk on project?
project.roots.no.jdk.on.projecct.title=No project jdk set up
project.roots.jdks.node.text=JDK stands for the Java Development Kit, a software development package that is required to write, test and debug Java applications. \
  JDK also contains classes and runtime environment that are used to execute the target application. <br><br>\
  Mobile SDK contains emulator of mobile phone as well as embedded Java SDK to compile/pack/run/debug J2ME applications. <br><br>\
  IntelliJ IDEA SDK contains idea's libraries and idea's embedded JRE to compile/pack/run/debug plugins for Intellij IDEA. <br><br>\
  When you create a J2ME Module or Plugin Module, make sure that you have configured appropriate JDK for such a module.
module.group.banner.text=Module group ''{0}''
project.roots.jdk.banner.text=JDK ''{0}''
project.roots.module.groups.text=Module groups are used to logically organize project modules.
rename.message.prefix.scope=Scope
rename.scope.title=Rename scope.
project.root.modules.display.name=Modules
rename.message.prefix.module=Module
rename.module.title=Rename module
project.roots.plain.mode.action.text.disabled=Hide Module Groups
project.roots.plain.mode.action.text.enabled=Show Module Groups
project.roots.tooltip.module.miscongigured=''{0}'' has {1, choice, 1#problem with |2#problems with:\n}
project.roots.tooltip.library.misconfigured=Library ''{0}'' has broken paths.
project.roots.tooltip.unused=''{0}'' is unused.
project.roots.javadoc.tab.description=Manage external JavaDocs attached to this module. External JavaDoc override JavaDoc annotations you might have in your module.
project.roots.output.compiler.title=Compiler output
choose.modules.dialog.title=Choose modules
choose.modules.dialog.description=<html>Library '' {0}'' will be added to the selected modules.</html>
project.roots.module.jdk.problem.message=Module JDK is not defined.
project.roots.library.problem.message=Classpath {0, choice, 1#entry is invalid: |2#entries are invalid: \n}
project.roots.project.display.name=Project ''{0}''
project.roots.global.resources.display.name=Global Resources
project.roots.modules.display.name=Modules