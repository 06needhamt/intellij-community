codeinsight.settings=CodeInsight settings
error.hint.file.is.readonly=File {0} is read-only
error.dialog.readonly.file.title=File Is Read-Only
error.dialog.readonly.file.message=Cannot modify a read-only file.
error.dialog.readonly.files.title=Cannot Modify Read-Only Files
error.dialog.readonly.files.message={0} contains read-only file(s).\nProcess all other files?
process.scope.directory=Directory ''{0}''
process.scope.project=Project ''{0}''
process.scope.module=Module ''{0}''
reformat.code.accept.button.text=Run
process.scope.file=File {0}
reformat.option.selected.text=Selected text
reformat.option.all.files.in.directory=All files in directory {0}
reformat.option.include.subdirectories=Include subdirectories
reformat.option.optimize.imports=Optimize imports
process.optimize.imports=Optimize Imports
progress.text.optimizing.imports=Optimizing imports...
process.reformat.code=Reformat Code
progress.text.reformatting.code=Reformatting code...
dialog.reformat.files.title=Reformat Files
dialog.reformat.files.optimize.imports.checkbox=&Optimize imports
dialog.reformat.files.reformat.selected.files.label=Reformat selected files?
command.name.typing=Typing
dialog.import.on.paste.title=Select Classes to Import
dialog.import.on.paste.title2=Select Elements to Import
dialog.paste.on.import.text=The code fragment which you have pasted uses classes\n\
  that are not accessible by imports in the new context.\n\
  Select classes that you want to import to the new file.
dialog.paste.on.import.text2=The code fragment which you have pasted uses elements\nthat are not accessible by imports in the new context.\nSelect elements that you want to import to the new file.
paste.data.flavor.folding=FoldingData
paste.dataflavor.referencedata=ReferenceData
generate.constructor.fields.chooser.title=Choose Fields to Initialize by Constructor
error.attempt.to.generate.constructor.for.anonymous.class=Cannot add constructor to an anonymous class
generate.constructor.super.constructor.chooser.title=Choose Super Class Constructor
generate.delegate.method.chooser.title=Select Methods to Generate Delegates for
generate.delegate.target.chooser.title=Select Target to Generate Delegates for
generate.equals.and.hashcode.already.defined.warning=Methods ''boolean equals(Object)'' and ''int hashCode()'' are already defined\nfor class {0}. Do you want to delete them and proceed?
generate.equals.and.hashcode.already.defined.warning.anonymous=Methods 'boolean equals(Object)' and 'int hashCode()' are already defined\nfor this anonymous class. Do you want to delete them and proceed?
generate.equals.and.hashcode.already.defined.title=Generate equals() and hashCode()
generate.equals.and.hashcode.error.no.object.class.message=Cannot generate equals() and hashCode().\nNo java.lang.Object class found.
generate.equals.and.hashcode.error.no.object.class.title=No java.lang.Object
generate.equals.compare.nested.arrays.comment= // Compare nested arrays - values of {0} here
generate.equals.compare.arrays.comment= // Probably incorrect - comparing Object[] arrays with Arrays.equals
generate.getter.setter.title=Select Fields to Generate Getters and Setters
generate.getter.fields.chooser.title=Select Fields to Generate Getters
generate.setter.fields.chooser.title=Select Fields to Generate Setters
override.implement.broken.file.template.message=Please Correct "Overridden/Implemented Method Body" Template
override.implement.broken.file.template.title=File Template Error
methods.to.implement.chooser.title=Select Methods to Implement
methods.to.override.chooser.title=Select Methods to Override
generate.list.popup.title=Generate
surround.with.cast.template=((Type)expr)
surround.with.dowhile.template=do / while
surround.with.for.template=for
surround.with.ifelse.expression.template=if (expr) {...} else {...}
surround.with.ifelse.template=if / else
surround.with.if.expression.template=if (expr) {...}
surround.with.if.template=if
surround.with.not.instanceof.template=!(expr instanceof Type)
surround.with.not.template=!(expr)
surround.with.parenthesis.template=(expr)
surround.with.runnable.template=Runnable
surround.with.synchronized.template=synchronized
surround.with.try.catch.finally.template=try / catch / finally
surround.with.try.catch.template=try / catch
surround.with.try.catch.incorrect.template.message=Invalid File Template for Catch Body!
surround.with.try.catch.incorrect.template.title=Surround With Try / Catch
surround.with.try.finally.template=try / finally
surround.with.while.template=while
surround.with.runtime.type.template=((RuntimeType)expr)
surround.with.chooser.title=Surround With
generate.equals.hashcode.wizard.title=Generate equals() and hashCode()
generate.equals.hashcode.equals.fields.chooser.title=Choose fields to be included in equals()
generate.equals.hashcode.hashcode.fields.chooser.title=Choose fields to be included in hashCode()
generate.equals.hashcode.non.null.fields.chooser.title=Select all non-null fields
generate.equals.hashcode.internal.error=Internal error
generate.equals.warning.equals.for.nested.arrays.not.supported=equals() for nested arrays is not supported
generate.equals.warning.generated.equals.could.be.incorrect=Generated equals() for Object[] can be incorrect
generate.equals.hashcode.warning.hashcode.for.arrays.is.not.supported=hashCode () for arrays is not supported
status.bar.highlighted.occurences.message=Highlighted {0} occurences of \"{1}\" (press Escape to remove the highlighting)
status.bar.exit.points.highlighted.message={0} exit {0, choice, 1#point|2#points} highlighted (press Escape to remove the highlighting)
highlight.thrown.exceptions.chooser.all.entry=All listed
highlight.exceptions.thrown.chooser.title=Choose Exception Classes to Highlight
status.bar.highlighted.usages.message={0} {0, choice, 1#usage|2#usages} of {1} found (press Escape to remove the highlighting)
status.bar.highlighted.usages.no.target.message={0} {0, choice, 1#usage|2#usages} found (press Escape to remove the highlighting)
status.bar.highlighted.usages.not.found.message=No usages of {0} found
status.bar.highlighted.usages.not.found.no.target.message=No usages found
parameter.info.no.parameters=<no parameters>
xml.tag.info.no.attributes=<no attributes>
n.of.m={0} of {1}
quick.definition.back=Back
quick.definition.forward=Forward
quick.definition.edit.source=Edit Source
quick.definition.show.source=Show Source
i18n.quickfix.property.panel.title=Property Info
i18n.quickfix.property.panel.update.all.files.in.bundle.checkbox=Update all properties files in &Resource bundle
i18n.quickfix.property.panel.properties.file.label=&Properties File:
i18n.quickfix.property.panel.property.value.label=Property &Value:
i18n.quickfix.property.panel.property.key.label=Property &Key:
i18n.quickfix.code.panel.title=Java Code Info
i18n.quickfix.code.panel.resource.bundle.expression.label=Resource bundle &expression:
i18n.quickfix.code.panel.marker.comment.text.label=&Marker comment text:
i18n.quickfix.preview.panel.title=Preview
quickfix.i18n.concatentation=I18nize string concatenation containing hard coded string literal
quickfix.i18n.command.name=i18nize
invalid.property.key.inside.gui.form=Invalid Property Key inside GUI Form
inspection.i18n.display.name=Hard coded strings
inspection.i18n.option.ignore.assert=Ignore for assert statement arguments
inspection.i18n.option.ignore.for.exception.constructor.arguments=Ignore for exception constructor arguments
inspection.i18n.option.ignore.for.specified.exception.constructor.arguments=Ignore for specified exception constructor arguments
inspection.i18n.option.ignore.for.junit.assert.arguments=Ignore for JUnit assert arguments
inspection.i18n.option.ignore.for.sole.argument.of.the.method.returning.string=Ignore for sole argument of the method returning String
inspection.i18n.option.ignore.qualified.class.names=Ignore literals which have value equal to existing qualified class name
inspection.i18n.option.ignore.property.keys=Ignore literals which have value equal to existing property key
inspection.i18n.option.ignore.nonalphanumerics=Ignore literals which do not contain alphabetic characters
inspection.i18n.message.in.form=Hard coded string literal in form: ''{0}''
inspection.i18n.message.general=Hard coded string literal
inspection.i18n.quickfix=I18nize hard coded string literal
inspection.i18n.message.general.with.value=Hard coded string literal: ''{0}''
inspection.unresolved.property.key.reference.name=Invalid property key
inspection.unresolved.property.key.reference.message=String literal ''{0}'' doesn''t appear to be valid property key
inspection.invalid.property.in.form.quickfix.error.bundle.not.specified=Bundle not specified
inspection.invalid.property.in.form.quickfix.error.property.key.not.specified=Property key not specified
inspection.invalid.property.in.form.quickfix.error.bundle.not.found=Bundle ''{0}'' not found
inspection.invalid.property.in.form.quickfix.error.key.not.found=Key ''{0}'' not found in bundle ''{1}''
i18nize.dialog.title=I18nize String Literal
i18nize.dialog.error.jdk.message=Class 'java.util.ResourceBundle' cannot be found.\nPlease setup correct JDK.
i18nize.dialog.error.jdk.title=Class Not Found
i18nize.dialog.property.file.chooser.title=Choose Properties File
i18nize.dialog.template.link.label=Edit I18n template
i18nize.dialog.error.property.already.defined.message=Property ''{0}'' already exists in the file ''{1}''
i18nize.dialog.error.property.already.defined.title=Property Already Exists
intention.split.declaration.family=Split Declaration
intention.split.declaration.text=Split into separate declarations
intention.split.declaration.assignment.text=Split into declaration and assignment
intention.add.override.annotation=Add '@Override' Annotation
intention.add.override.annotation.family=Add Override Annotation
intention.make.type.generic.family=Make Type Generic
intention.make.type.generic.text=Change type of {0} to {1}
intention.split.if.family=Split If
intention.split.if.text=Split into 2 if's
intention.implement.abstract.method.family=Implement Abstract Method
intention.implement.abstract.method.text=Implement method ''{0}''
intention.add.annotation.text=Add ''@{0}'' Annotation
intention.add.annotation.family=Add Annotation
intention.add.on.demand.static.import.family=Add On Demand Static Import
intention.add.on.demand.static.import.text=Add on demand static import for ''{0}''
intention.add.single.member.static.import.family=Add Single-Member Static Import
intention.add.single.member.static.import.text=Add static import for ''{0}''
intention.replace.concatenation.with.formatted.output.family=Replace Concatenation with Formatted Output
intention.replace.concatenation.with.formatted.output.text=Replace + with java.text.MessageFormat call
dialog.create.field.from.parameter.title=Create Field
dialog.create.field.from.parameter.already.exists.text=Use existing field {0}?
dialog.create.field.from.parameter.already.exists.title=Field Already Exists
dialog.create.field.from.parameter.field.type.label=Field of type {0}
dialog.create.field.from.parameter.field.name.label=Name:
dialog.create.field.from.parameter.declare.final.checkbox=Declare final
dialog.create.class.destination.package.label=Destination package:
dialog.create.class.package.chooser.title=Choose Destination Package
create.directory.command=Create directory
dialog.create.class.create.interface.label=Create interface:
dialog.create.class.create.class.label=Create class:
dialog.create.class.interface.name=Create interface {0}
dialog.create.class.class.name=Create class {0}
intention.implement.abstract.class.family=Implement Abstract Class or Interface
intention.implement.abstract.class.default.text=Implement Abstract Class
intention.implement.abstract.class.interface.text=Implement Interface
intention.implement.abstract.class.error.cannot.create.class.message=Cannot Create Class ''{0}''
intention.implement.abstract.class.error.cannot.create.class.title=Failed to Create Class
intention.assign.field.from.parameter.text=Assign Parameter to Field ''{0}''
intention.assign.field.from.parameter.family=Assign Parameter to Field
intention.create.field.from.parameter.text=Create Field For Parameter ''{0}''
intention.create.field.from.parameter.family=Create Field for Parameter
intention.implement.abstract.method.searching.for.descendants.progress=Searching For Descendants...
intention.implement.abstract.method.error.no.classes.message=There are no classes found where this method can be implemented
intention.implement.abstract.method.error.no.classes.title=No Classes Found
intention.implement.abstract.method.class.chooser.title=Choose Implementing Class
intention.implement.abstract.method.command.name=Implement method
intention.invert.if.condition=Invert If Condition
intention.add.method.to.ejb.class.family=Add Method to EJB Class
intention.add.method.to.ejb.class.text=Add ''{0}'' to bean implementation class {1}
intention.add.method.to.ejb.class.error.no.impl.class.message=Bean implementation class was not found. No methods were generated.
intention.add.method.to.ejb.interface.family=Add Method to EJB Interface
intention.add.method.to.ejb.interface.text=Add ''{0}'' to bean interface
intention.add.method.to.ejb.interface.error.no.home.interface=Bean home interface class was not found. No methods were generated.
intention.add.method.to.ejb.interface.error.no.interface=Bean interface class was not found. No methods were generated.
intention.add.method.to.ejb.interface.command.name=Adding methods
intention.add.method.to.ejb.interface.chooser.title=Select interfaces
intention.add.method.to.ejb.interface.chooser.label=Add ''{0}'' to
lightbulb.tooltip=Click or press {0}
lightbulb.disable.action.text=Don''t show \"lightbulb\" for ''{0}'' action
lightbulb.enable.action.text=Show \"lightbulb\" for ''{0}'' action
dialog.intention.settings.intention.list.title=Intention List
dialog.intention.settings.description.panel.title=Description
dialog.intention.settings.description.usage.example.title=<html><body><center><b>Usage Example:</b></center></body></html>
intentions.category.control.flow=Control Flow
intentions.category.declaration=Declaration
intentions.category.boolean=Boolean
intentions.category.ejb=EJB
intentions.category.i18n=I18N
intentions.category.imports=Imports
intention.settings=Intention Settings
intention.settings.category.text=<html><body><font face=\"verdana\" size=\"-1\">\
  <center>You have selected intention category ''<b>{0}</b>''.</center>\
  <center>Clicking the checkbox you can enable/disable all intentions in this category.</center>\
  <center>To enable/disable particular intention, select the intention inside this category.</center>\
  </font></body></html>
javadoc.description.copied.from.interface=Description copied from interface:
javadoc.description.copied.from.class=Description copied from class:
javadoc.deprecated=Deprecated
javadoc.since=Since:
javadoc.see.also=See Also:
javadoc.parameters=Parameters:
javadoc.returns=Returns:
javadoc.throws=Throws:
javadoc.method.in.interface={0}in interface {1}
javadoc.method.in.class={0}in class {1}
javadoc.method.overrides=Overrides:
javadoc.method.specified.by=Specified by:
javadoc.external.fetch.error.message=Cannot fetch remote JavaDocs: {0}
javadoc.external.fetch.error.title=IO Error
searching.for.implementations=Searching For Implementations...
goto.implementation.chooser.title=Choose Implementation of {0}
incremental.search.tooltip.prefix=Search for:
goto.super.method.chooser.title=Choose super method
goto.super.class.chooser.title=Choose super class or interface
javadoc.action.back=Back
javadoc.action.forward=Forward
javadoc.action.view.external=View External JavaDoc
javadoc.documentation.not.found.message=The documentation for this element is not found.\nPlease add all the needed paths to API docs in Project Settings.
javadoc.documentation.not.found.title=No Documentation
javadoc.fetching.progress=Fetching JavaDocs....
no.documentation.found=No documentation found.
javadoc.candiates=<html>Candidates for method call <b>{0}</b> are:<br><br>{1}</html>
javadoc.candidates.not.found=<html>No candidates found for method call <b>{0}</b>.</html>
definition.navigation.chooser.title=Go To Multiple Definitions Of {0}
usage.navigation.chooser.title=Go To Multiple Usages Of {0}
declaration.navigation.title=Go To Declaration Of {0}
template.shortcut.enter=Enter
template.shortcut.tab=Tab
template.shortcut.space=Space
dialog.edit.live.template.title=Edit Live Template
templates.no.defined=No templates defined in this context
templates.no.defined.with.prefix=No templates starting with ''{0}'' defined in this context
templates.settings.page.title=Live Templates
templates.select.template.chooser.title=Select Template
templates.export.display.name=Code templates
templates.dialog.edit.variables.title=Edit Template Variables
templates.dialog.edit.variables.border.title=Variables
templates.dialog.edit.variables.action.move.up=Move &Up
templates.dialog.edit.variables.action.move.down=Move &Down
templates.dialog.edit.variables.table.column.name=Name
templates.dialog.edit.variables.table.column.expression=Expression
templates.dialog.edit.variables.table.column.default.value=Default value
templates.dialog.edit.variables.table.column.skip.if.defined=Skip if defined
templates.dialog.table.column.abbreviation=Abbreviation
templates.dialog.table.column.description=Description
templates.dialog.table.column.active=Active
templates.dialog.table.action.add=&Add...
templates.dialog.table.action.copy=&Copy...
templates.dialog.table.action.edit=&Edit...
templates.dialog.table.action.remove=&Remove
templates.dialog.shortcut.chooser.label=By default expand with
dialog.copy.live.template.title=Copy Live Template
template.delete.confirmation.text=Do you want to delete this template?
template.delete.confirmation.title=Confirm Delete
dialog.edit.template.shortcut.default=Default ({0})
dialog.edit.template.template.text.title=Template text
dialog.edit.template.button.edit.variables=Edit variables
dialog.edit.template.label.abbreviation=&Abbreviation:
dialog.edit.template.label.group=&Group:
dialog.edit.template.label.description=&Description:
dialog.edit.template.options.title=Options
dialog.edit.template.label.expand.with=Expand with
dialog.edit.template.checkbox.reformat.according.to.style=&Reformat according to style
dialog.edit.template.checkbox.shorten.fq.names=Shorten &FQ names
dialog.edit.template.context.title=Context
dialog.edit.template.checkbox.java.code=&Java code
dialog.edit.template.checkbox.html=&HTML
dialog.edit.template.checkbox.java.comment=Java &comment
dialog.edit.template.checkbox.xml=&XML
dialog.edit.template.checkbox.java.string=Java &string
dialog.edit.template.checkbox.jsp=JS&P
dialog.edit.template.checkbox.smart.type.completion=Smart type c&ompletion
dialog.edit.template.checkbox.other=O&ther
dialog.edit.template.error.title=Cannot Save
dialog.edit.template.error.malformed.abbreviation=Cannot save the template.\nTemplate abbreviation should contain only letters, digits and dots.
dialog.edit.template.error.already.exists=Cannot save the template.\nTemplate with the abbreviation \"{0}\"\nalready exists in group \"{1}\".\nTry another abbreviation.
dialog.edit.template.error.malformed.template=Error parsing the template
finish.template.command=Finish Template
insert.code.template.command=Insert Code Template
template.next.variable.command=Go to Next Code Template Tab
template.previous.variable.command=Go to Previous Code Template Tab
macro.array.variable=arrayVariable()
macro.capitalize.string=capitalize(String)
macro.cast.to.left.side.type=castToLeftSideType()
macro.classname=className()
macro.component.type.of.array=componentTypeOf(Array)
macro.current.package=currentPackage()
macro.decapitalize.string=decapitalize()
macro.descendant.classes.enum=descendantClassesEnum(String)
macro.enum=enum(...)
macro.expected.type=expectedType()
macro.guess.element.type.of.container=guessElementType(Container)
macro.iterable.component.type=iterableComponentType(ArrayOrIterable)
macro.iterable.variable=iterableVariable()
macro.linenumber=lineNumber()
macro.methodname=methodName()
macro.qualified.class.name=qualifiedClassName()
macro.right.side.type=rightSideType()
macro.suggest.index.name=suggestIndexName()
macro.suggest.variable.name=suggestVariableName()
macro.variable.of.type=variableOfType(Type)
command.name.surround.with.runtime.cast=Surround with runtime cast
inspection.i18n.expression.is.invalid.error.message=The I18nized Expression template is not a valid expression
inspection.error.dialog.title=Error
livetemplate.description.tag.pair=Tag pair
livetemplate.description.itar=Iterate elements of array
livetemplate.description.itco=Iterate elements of java.util.Collection
livetemplate.description.iten=Iterate java.util.Enumeration
livetemplate.description.itit=Iterate java.util.Iterator
livetemplate.description.itli=Iterate elements of java.util.List
livetemplate.description.ittok=Iterate tokens from String
livetemplate.description.itve=Iterate elements of java.util.Vector
livetemplate.description.ritar=Iterate elements of array in reverse order
livetemplate.description.iter=Iterate Iterable | Array in J2SDK 5.0 syntax
livetemplate.description.inst=Checks object type with instanceof and down-casts it
livetemplate.description.lst=Fetches last element of an array
livetemplate.description.mn=Sets lesser value to a variable
livetemplate.description.mx=Sets greater value to a variable
livetemplate.description.psvm=main() method declaration
livetemplate.description.toar=Stores elements of java.util.Collection into array
livetemplate.description.serr=Prints a string to System.err
livetemplate.description.sout=Prints a string to System.out
livetemplate.description.soutm=Prints current class and method names to System.out
livetemplate.description.soutv=Prints a value to System.out
livetemplate.description.st=String
livetemplate.description.psf=public static final
livetemplate.description.psfi=public static final int
livetemplate.description.psfs=public static final String
livetemplate.description.thr=throw new
livetemplate.description.surround.braces=Surround with {}
livetemplate.description.surround.parens=Surround with ()
livetemplate.description.surround.tag=Surround with <tag></tag>
quickfix.add.variable.text=Initialize variable ''{0}''
quickfix.add.variable.family.name=Initialize variable